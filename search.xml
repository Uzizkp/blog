<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>给自己搞个Logo</title>
      <link href="/blog/2020/05/08/%E7%BB%99%E8%87%AA%E5%B7%B1%E6%90%9E%E4%B8%AALogo/"/>
      <url>/blog/2020/05/08/%E7%BB%99%E8%87%AA%E5%B7%B1%E6%90%9E%E4%B8%AALogo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>终于给自己设计出来了一个满意的Logo如下图,作为一个一点设计经验没有的小白想搞一个好看的专属标志还是有点难度的,主要方向是把自己的名字拼音首字母(zkp)组合成结构漂亮的简单图形,尝试了许多方案后感觉从三角形和四边形比较适合,最终作出了下面的图形</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200508125322.PNG"  alt=""></p><h4 id="如果你也行拥有一个自己的Logo-这里有一些建议"><a href="#如果你也行拥有一个自己的Logo-这里有一些建议" class="headerlink" title="如果你也行拥有一个自己的Logo,这里有一些建议."></a>如果你也行拥有一个自己的Logo,这里有一些建议.</h4><p>以前一直觉着下面鹿晗的Logo超酷,特别简单,结构非常漂亮,十分羡慕,也想拥有一个属于自己的Logo.于是开始想尽各种办法给自己搞一个.我首先尝试了许多自动生成Logo的网站和app,他们会提供一些图案和字体,让用户组合Logo, 如果不想花太多时间修改的话,可以直接使用生成的Logo,但是大多数需要付费.</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200508125404.png"  alt=""></p><p>推荐网站: <a href="https://www.freelogodesign.org/" target="_blank" rel="noopener">freelogodesign</a>  <a href="https://www.tailorbrands.com/logo-maker" target="_blank" rel="noopener">tailorbrands </a> 等等(这类网站太多了,大同小异)</p><p>推荐app:  LogoScopic</p><p>但是这些自动生成工具还是不够个性化,如果跟我一样想要尝试自己设计的话,可以先用搜索引擎搜索一下和你想要的效果相近的logo作为参考再进一步修改,例如我在google image上搜了了关键词‘kp logo’或者‘triangle logo’ 就会得到很多相关的内容,我就是挑选了一图案作为基础在PS上修改出来的.</p><p>确定了图案之后,如果得到的是位图,需要在AI或者CroelDRAW这种矢量图软件上绘制出图形,或者利用一些工具转换成矢量图,建议在淘宝上花10块钱找设计师转一下,专业的位图转矢量图工具特别贵,得到logo的矢量图后就可以做一些颜色,风格等等方面的修改,最后导出png图片文件制作不同的版本,例如下面的logo分别是放在我的博客首页,网站标识,PWA上的Logo.</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200508125023.png"  alt="20200508125023"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 记事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Logo </tag>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>借りぐらしのアリエッティ</title>
      <link href="/blog/2020/05/01/%E5%80%9F%E3%82%8A%E3%81%90%E3%82%89%E3%81%97%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%A8%E3%83%83%E3%83%86%E3%82%A3/"/>
      <url>/blog/2020/05/01/%E5%80%9F%E3%82%8A%E3%81%90%E3%82%89%E3%81%97%E3%81%AE%E3%82%A2%E3%83%AA%E3%82%A8%E3%83%83%E3%83%86%E3%82%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>《借东西的小人阿莉埃蒂》2010年在日本上映，吉普力工作室出品，宫崎骏编剧，米林宏昌导演，配音阵容强大：志田未来，神木隆之介，三浦友和… 整体故事结构非常简单：十几岁的少年 翔 患有先天性心脏病，父母正在离婚，且工作很忙，姥姥把翔带到乡下的房子里养病，回去的第一天，翔在院子里偶然发现了小人阿莉埃蒂，阿莉埃蒂一家三口的家在屋子下面的隔板里，他们跟拇指差不多大小，靠着在人类房子里‘借’东西维持生活，翔曾听母亲谈起过小人的故事，心地善良的翔想帮助他们，没想到被女仆春姨发现了，春姨觉得小人是在偷东西，于是把阿莉埃蒂的妈妈抓了起来，阿里亚蒂找翔帮忙把妈妈救了出来…</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/tba1.png"  alt=""></p><p>作为吉普力的影迷，现在才补上这部动画实在有些惭愧，不过时隔多年再看宫崎骏动画依旧非常动人且治愈，这种感觉和虫师、夏目友人帐的风格非常不同，其浓郁鲜艳的油画的质感，好像是吉普力独一份的风格。整片剧情和人物处理其实是有些无力的，直到最后男女主的告别才迎来高潮，也只有最后这个场景感情最饱满，不过不像传统的吉普力动画，故事的结局全是留白，没有看到翔的手术是否成功，没有看到阿莉埃蒂的新家，也没有看到小野人的生活…,故事的后续都被放在了观众的心里，虽然感觉看不够，但也回味了很久，让人感觉故事里的角色未来充满希望,然后把观众也个感染了。</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/tba.png"  alt=""></p><p>其实整部动画最出彩的部分是配乐，温暖的和风旋律，伴随整部电影，要不是因为音乐够舒服，可能看个20分钟就关了。下面分享一下配乐歌单：</p><p><a href="https://music.163.com/album?id=234358&userid=15433008" target="_blank" rel="noopener">借りぐらしのアリエッティ サウンドトラック (动画《借东西的小人阿莉埃蒂》原声带)</a></p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/tba2.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 测评 </category>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岛屿--个人网站博客搜集页</title>
      <link href="/blog/2020/04/29/%E5%B2%9B%E5%B1%BF-%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%8D%9A%E5%AE%A2%E6%90%9C%E9%9B%86%E9%A1%B5/"/>
      <url>/blog/2020/04/29/%E5%B2%9B%E5%B1%BF-%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E5%8D%9A%E5%AE%A2%E6%90%9C%E9%9B%86%E9%A1%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h1 id="岛屿–个人站点博客收录"><a href="#岛屿–个人站点博客收录" class="headerlink" title="岛屿–个人站点博客收录"></a>岛屿–个人站点博客收录</h1><h2 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h2><p><strong>收录各行各业有趣的人的个人博客,方便我自己查看,如果可能的话也帮助更多的人发现彼此，比起其他导航页这个导航页是真正以人为节点的导航，发现有趣的人的主页，增加流量，互相交流。</strong></p><p><strong>大多数链接为单链,如给您造成困扰请留言,会立即删除</strong></p><p><a href="https://zkpeace.com/WebStackPage/cn/index.html">岛屿</a></p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/public/image-20200428010639810.png"  alt="image-20200428010639810"></p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/public/image-20200428010714703.png"  alt="image-20200428010714703"></p><h2 id="欢迎更多的人留言入住"><a href="#欢迎更多的人留言入住" class="headerlink" title="欢迎更多的人留言入住"></a>欢迎更多的人留言入住</h2><p>可以在<a href="https://github.com/Uzizkp/uzizkp.github.io/issues/2" target="_blank" rel="noopener">ISSUE</a>中留言</p><p>也可以去<a href="https://zkpeace.com">我的博客</a>互换友链</p><h2 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h2><p>UI design by <a href="http://viggoz.com/" target="_blank" rel="noopener"><strong>@Viggo</strong></a> modified by <a href="http://zkpeace.com/about"><strong>@Kp</strong></a></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化：把玩一下seaborn(一)</title>
      <link href="/blog/2020/04/23/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9A%E6%8A%8A%E7%8E%A9%E4%B8%80%E4%B8%8Bseaborn-%E4%B8%80/"/>
      <url>/blog/2020/04/23/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%EF%BC%9A%E6%8A%8A%E7%8E%A9%E4%B8%80%E4%B8%8Bseaborn-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><blockquote><p>最近刚开始学习数据可视化，第一个任务就是了解并完成seaborn（一个python处理数据可视化的库）的官方教程，其他数据可视化的内容会后续更新。seaborn在调用数据的时候会有一些数据库相关的操作,例如<code>data=data=diamonds.sort_values(&quot;color&quot;)</code>这里就不解释了</p></blockquote><p>环境搭建：</p><ul><li>下载<a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">Anaconda</a>搭建Python环境</li><li>下载类库Numpy， SciPy， matplotlib， pandas 和 seaborn</li></ul><p>引入需要的库，设置一下显示网格的样式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br></pre></td></tr></table></figure><h2 id="数据关系可视化"><a href="#数据关系可视化" class="headerlink" title="数据关系可视化"></a>数据关系可视化</h2><p>接下来我们使用seaborn最常用的方法<a href="https://seaborn.pydata.org/generated/seaborn.relplot.html#seaborn.relplot" target="_blank" rel="noopener"><code>relplot()</code></a>实现散点图<code>scatterplot()</code>和线图<code>lineplot()</code></p><h3 id="散点图-Scatter-plots"><a href="#散点图-Scatter-plots" class="headerlink" title="散点图 Scatter plots"></a>散点图 Scatter plots</h3><p>首先可以引入seaborn中自带事例子数据集“tips”,这个数据集的属性有</p><ul><li><p>时间数据 week</p></li><li><p>账单: 总消费,小费 total_bill, tips</p></li><li><p>消费者性别 sex</p></li><li><p>消费者是否抽烟 smoker</p><p>… </p></li></ul><p>下面很多例子使用了tips数据集,不会再特别指出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.set(style=<span class="string">"darkgrid"</span>) <span class="comment"># 设置样式为网格</span></span><br><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>)</span><br></pre></td></tr></table></figure><p>其实seaborn中有很多画散点图的方法其中一种是<a href="https://seaborn.pydata.org/generated/seaborn.scatterplot.html#seaborn.scatterplot" target="_blank" rel="noopener"><code>scatterplot()</code></a>，使用方法是把数据集中的集合分配给方法中的属性,这样不同集合就会使用散点图中不同属性的样式展示出来如下面实例中的色调属性<code>hue</code>获取了数据集中的<code>smoker</code>集合,这样集合中的数据差异就可以通过色调的不同展示出来,其他同理.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"tip"</span>, size=<span class="string">"size"</span>,hue=<span class="string">"smoker"</span>, palette=<span class="string">"ch:r=-.5,l=.75"</span>,  style=<span class="string">"time"</span>,sizes=(<span class="number">15</span>, <span class="number">200</span>), data=tips);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423194837.png"  alt=""></p><p><code>scatterplot</code>是<code>relplot</code>的默认方法所以不需要单独设置,具体属性可以去<a href="https://seaborn.pydata.org/generated/seaborn.scatterplot.html#seaborn.scatterplot" target="_blank" rel="noopener"><code>scatterplot()</code></a>的Api查看.</p><h3 id="折线图强调连续性-Emphasizing-continuity-with-line-plots"><a href="#折线图强调连续性-Emphasizing-continuity-with-line-plots" class="headerlink" title="折线图强调连续性 Emphasizing continuity with line plots"></a>折线图强调连续性 Emphasizing continuity with line plots</h3><p>下面介绍一下<code>relplot</code>里的第二个方法<code>lineplot</code>,前面说过默认方法是<code>scatterplot</code>所以要设置属性<code>kind=lineplot</code>启用折线图,这个方法默认<code>sort=true</code>将x轴数据与y轴数据按顺序对应起来.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fmri = sns.load_dataset(<span class="string">"fmri"</span>)</span><br><span class="line">sns.relplot(x=<span class="string">"timepoint"</span>, </span><br><span class="line">            y=<span class="string">"signal"</span>,</span><br><span class="line">            hue=<span class="string">"region"</span>, </span><br><span class="line">            style=<span class="string">"event"</span>,</span><br><span class="line">            dashes=<span class="literal">True</span>, <span class="comment"># 开启显示虚线</span></span><br><span class="line">            markers=<span class="literal">True</span>, <span class="comment"># 显示标记</span></span><br><span class="line">          <span class="comment"># ci="sd" # 显示标准偏差,默认是显示置信区间,None关闭显示</span></span><br><span class="line">            kind=<span class="string">"line"</span>, </span><br><span class="line">            data=fmri);</span><br></pre></td></tr></table></figure><p>这里我们引入一个新的fmri数据集</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423194924.png"  alt=""></p><h3 id="同时显示多了图表"><a href="#同时显示多了图表" class="headerlink" title="同时显示多了图表"></a>同时显示多了图表</h3><p>用到<code>relplot</code>的属性是<code>col</code>和<code>col_wrap</code>自动分行,同理也可以用<code>row</code>属性设置列.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.relplot(x=<span class="string">"timepoint"</span>, y=<span class="string">"signal"</span>, hue=<span class="string">"event"</span>, style=<span class="string">"event"</span>,</span><br><span class="line">            col=<span class="string">"subject"</span>, </span><br><span class="line">            col_wrap=<span class="number">5</span>, <span class="comment"># 设置每行显示图表数量</span></span><br><span class="line">            height=<span class="number">3</span>, <span class="comment"># 每个图表的高度 </span></span><br><span class="line">            kind=<span class="string">"line"</span>,</span><br><span class="line">            data=fmri.query(<span class="string">"region == 'frontal'"</span>));</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195006.png"  alt=""></p><h2 id="数据种类的可视化-Plotting-with-categorical-data"><a href="#数据种类的可视化-Plotting-with-categorical-data" class="headerlink" title="数据种类的可视化 Plotting with categorical data"></a>数据种类的可视化 Plotting with categorical data</h2><p>对数据进行分类可视化用到的方法是<a href="https://seaborn.pydata.org/generated/seaborn.catplot.html#seaborn.catplot" target="_blank" rel="noopener"><code>catplot()</code></a>,和数据关系可视化类似,<code>catplot()</code>也有多种分类(kind),包括散点图(<code>strip</code>,<code>swarm</code>),分布图(<code>box</code>,<code>violin</code>,<code>boxen</code>)和柱状图(<code>point</code>,<code>bar</code>,<code>count</code>).</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.set(style=<span class="string">"ticks"</span>, color_codes=<span class="literal">True</span>) <span class="comment">#设置一下样式</span></span><br></pre></td></tr></table></figure><h3 id="散点图-categories-scatterplots"><a href="#散点图-categories-scatterplots" class="headerlink" title="散点图 categories scatterplots"></a>散点图 categories scatterplots</h3><p>除了种类外,散点图能精确的显示数据的分布,散点图默认显示方式是<code>stript,例如下面的例子,</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tips = sns.load_dataset(<span class="string">"tips"</span>) <span class="comment">#载入数据</span></span><br><span class="line">sns.catplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, data=tips);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195034.png"  alt=""></p><p>可以发现上面有些数据重叠在一起了,解决这个问题可以使用<code>jitter</code>属性,也可使用另一种散点图<code>swarm</code>,它自动使用算法区分出可能重叠的数据.需要注意的是可以使用<code>order</code>来控制顺序.下面的例子可以看出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"day"</span>, hue=<span class="string">"time"</span>, kind=<span class="string">"swarm"</span>,  order=[<span class="string">"Sun"</span>, <span class="string">"Sat"</span>,<span class="string">"Fri"</span>,<span class="string">"Thur"</span>], data=tips);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195054.png"  alt=""></p><h3 id="分布图-Distributions-of-observations-within-categories"><a href="#分布图-Distributions-of-observations-within-categories" class="headerlink" title="分布图 Distributions of observations within categories"></a>分布图 Distributions of observations within categories</h3><p> 数据量太大的时候,散点图显示不同种类的分布情况非常恐怖,所以可以使用分布图来观察不同种类数据的分布情况,具体代码就不贴了,只需要更改一下<code>kind</code>属性就可以了,下面分别看一下<code>box</code>,<code>boxen</code>,<code>violin</code>三种情况不同的显示风格:</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195117.png"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195152.png"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195213.png"  alt=""></p><p>其中要重点说一下<code>violin</code>方法使用了<a href="https://en.wikipedia.org/wiki/Kernel_density_estimation" target="_blank" rel="noopener">KDE</a>,因此有一些额外的属性可以设置,具体可以查看一下<a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html#seaborn.violinplot" target="_blank" rel="noopener">api</a>例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"total_bill"</span>, y=<span class="string">"day"</span>, hue=<span class="string">"sex"</span>,bw=<span class="number">.4</span>, cut=<span class="number">2</span>, inner=<span class="string">"stick"</span>,</span><br><span class="line">            kind=<span class="string">"violin"</span>, split=<span class="literal">True</span>, data=tips);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195310.png"  alt=""></p><h3 id="合并图表"><a href="#合并图表" class="headerlink" title="合并图表"></a>合并图表</h3><p>另外看一下如何将两个不同类型的图表合为一个,例如下面我们将<code>violin</code>和<code>swarm</code>类型的图表在一张图里展示:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g = sns.catplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, kind=<span class="string">"violin"</span>, inner=<span class="literal">None</span>, data=tips)</span><br><span class="line">sns.swarmplot(x=<span class="string">"day"</span>, y=<span class="string">"total_bill"</span>, color=<span class="string">"k"</span>, size=<span class="number">3</span>, data=tips, ax=g.ax);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423195326.png"  alt=""></p><h3 id="数据估计"><a href="#数据估计" class="headerlink" title="数据估计"></a>数据估计</h3><p>很多情况我们是不需要特别精确的数据信息的,只需要了解各个分类的走势和差异性,这个时候柱状图<code>bar</code>和点状图<code>point</code>可以展示的信息更简洁明了.</p><p>例如这里我们引入一个新的数据集titanic来分析一下泰坦尼克号上不同仓位的乘客的生存率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">titanic = sns.load_dataset(<span class="string">"titanic"</span>)</span><br></pre></td></tr></table></figure><p>首先下面看一下柱状图,这张图是可以直观的比较出各个仓位的生存率,需要指出的是柱状图的矩形边框也可以设置颜色.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"class"</span>, </span><br><span class="line">            y=<span class="string">"survived"</span>, hue=<span class="string">"sex"</span>,</span><br><span class="line">            palette=&#123;<span class="string">"male"</span>: <span class="string">"g"</span>, <span class="string">"female"</span>: <span class="string">"m"</span>&#125;, <span class="comment"># 设置hue属性显示的颜色</span></span><br><span class="line">            edgecolor=<span class="string">".6"</span>,</span><br><span class="line">            kind=<span class="string">"bar"</span>, </span><br><span class="line">            data=titanic);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423200632.png"  alt=""></p><p>点状图可以设置的属性也有很多,比如线的样式,点的样式等等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sns.catplot(x=<span class="string">"class"</span>, y=<span class="string">"survived"</span>, hue=<span class="string">"sex"</span>,</span><br><span class="line">            palette=&#123;<span class="string">"male"</span>: <span class="string">"g"</span>, <span class="string">"female"</span>: <span class="string">"m"</span>&#125;,</span><br><span class="line">            markers=[<span class="string">"^"</span>, <span class="string">"o"</span>], linestyles=[<span class="string">"-"</span>, <span class="string">"--"</span>],</span><br><span class="line">            kind=<span class="string">"point"</span>, data=titanic);</span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423200918.png"  alt=""></p><h3 id="图表的大小控制"><a href="#图表的大小控制" class="headerlink" title="图表的大小控制"></a>图表的大小控制</h3><p>设置图表的大小可以使用matplotlib里的<code>plt.subplots(figsize=(width,height))</code></p><p>想要改变图表各个轴的精度可以使用<code>set</code>方法参照下面的实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g = sns.catplot(x=<span class="string">"fare"</span>, y=<span class="string">"survived"</span>, row=<span class="string">"class"</span>,</span><br><span class="line">                kind=<span class="string">"box"</span>, orient=<span class="string">"h"</span>, height=<span class="number">1.5</span>, aspect=<span class="number">4</span>,</span><br><span class="line">                data=titanic.query(<span class="string">"fare &gt; 0"</span>))</span><br><span class="line">g.set(xscale=<span class="string">"log"</span>); <span class="comment"># x轴以对数形式显示</span></span><br></pre></td></tr></table></figure><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/vda/20200423201349.png"  alt=""></p><p>参考资料:</p><p><a href="https://seaborn.pydata.org/tutorial.html" target="_blank" rel="noopener">seaborn tutorial</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> seaborn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 入门 </tag>
            
            <tag> Python </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> seaborn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手臂机器人:机器人检测物体与运动规划</title>
      <link href="/blog/2020/04/17/%E6%89%8B%E8%87%82%E6%9C%BA%E5%99%A8%E4%BA%BA:%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A3%80%E6%B5%8B%E7%89%A9%E4%BD%93%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%A7%84%E5%88%92/"/>
      <url>/blog/2020/04/17/%E6%89%8B%E8%87%82%E6%9C%BA%E5%99%A8%E4%BA%BA:%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A3%80%E6%B5%8B%E7%89%A9%E4%BD%93%E4%B8%8E%E8%BF%90%E5%8A%A8%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="Task"><a href="#Task" class="headerlink" title="Task"></a>Task</h2><p>通过机械臂分类不同颜色的立方体:</p><ol><li>检测物体，立方体和杯子。.</li><li>确定立方体和杯子在三维空间中的位置和颜色。</li><li>生成机器手臂的Motion Plan然后实施。</li></ol><p>立方体和杯子首先根据深度信息来识别的，深度信息相同的再信息高度信息区分，然后使用颜色信息将立方体分类到各自的有色杯子中。</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/ar_lab/cup_missing_points.png"  alt="杯子数据丢失"></p><h2 id="Overall-algorithm"><a href="#Overall-algorithm" class="headerlink" title="Overall algorithm"></a>Overall algorithm</h2><p>使用 Flood fill algorithm</p><h2 id="System"><a href="#System" class="headerlink" title="System"></a>System</h2><h3 id="检测物体-Object-detection"><a href="#检测物体-Object-detection" class="headerlink" title="检测物体 Object detection"></a>检测物体 Object detection</h3><p>最关键的部分是识别物体，确定物体在三维空间中的准确位置，利用RGBD摄像机获取深度和颜色信息，然后根据尺寸大小检测立方体和杯子。<br>使用上述的聚类算法进行目标检测。</p><h3 id="运动规划-Motion-Planning"><a href="#运动规划-Motion-Planning" class="headerlink" title="运动规划 Motion Planning"></a>运动规划 Motion Planning</h3><p>目标检测给出了目标在三维空间中的位置。根据立方体和杯子的位置，计划动作来捕捉立方体，举起立方体，移动到最后的位置，并将其放入各自的杯子中。利用 inverse kinematics 计算 parameters of the joints。</p><p>由于所计算的 parameters of the joints 不是线性的，所以 inverse kinematics 空间的运动增量不稳定，因此利用 forward kinematics 将位姿的变化转化为 joint space。得到平滑的运动结果。</p><h2 id="Qt配置"><a href="#Qt配置" class="headerlink" title="Qt配置"></a>Qt配置</h2><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><ul><li>pencv</li><li>librealsense</li><li>qt5-default</li><li>qglviewer</li><li>libqt5serialport5-dev</li></ul><h2 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p><video src='https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/ar_lab/result.mov' type='video/mov' width='100%' controls="controls" preload="auto" height='100%'></video></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 运动规划 </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020搬家记录</title>
      <link href="/blog/2020/03/02/2020%E6%90%AC%E5%AE%B6%E8%AE%B0%E5%BD%95/"/>
      <url>/blog/2020/03/02/2020%E6%90%AC%E5%AE%B6%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>从2019年九月就开始申请学校的宿舍，现在终于拿到房子了！由于一次失误住进了超贵的“高级公寓”终于可以搬出来了哈哈哈哈哈哈，そんなに嬉しいことはないわ。记录一下过程。</p><p>我在stw bonn（Studierendenwerk Bonn AöR）申请学生宿舍过去了五个月后还是没有答复，官方标准是4-6个月（坑！），马上就要无家可归了，于是我就去stw的办公室要了一次房子，还是没给我，于是我又发邮件催他，终于在我发完邮件当天给了我一个房子哈哈哈。</p><p>然后我突然膨胀了，感觉给的房子不是我的第一选择（虽然我申请表里有写），又给部门经理发了邮件问一下能不能换一个，她无情的把我拒绝了，意识是不想住等四个月重新申请，我立马怂了，交上押金合同上签上字就去确认了，后来一切顺利。</p><h4 id="2020-03-02"><a href="#2020-03-02" class="headerlink" title="2020.03.02"></a>2020.03.02</h4><p>今天去拿钥匙🔑，管理员是个乐呵呵的大叔，带我周围转了一下，介绍了一下房子，还劝我多学点德语，终于有个落脚的地方了哈哈。</p><p>房子非常的干净，<br>稍微整理一下是这样的：<br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/IMG_2801.JPG"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 记事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序-找地儿住-官方文档</title>
      <link href="/blog/2020/03/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E6%89%BE%E5%9C%B0%E5%84%BF%E4%BD%8F-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/"/>
      <url>/blog/2020/03/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E6%89%BE%E5%9C%B0%E5%84%BF%E4%BD%8F-%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>据我所知，在德国留学，找宿舍很难，例如在波恩需要提前半年申请，等4～6个月才能等到分配房子，而且每个宿舍什么情况大家也没有太多的途径了解到，如果拿到不太好的宿舍，管理员是不给换的，搬家又那么麻烦，本人就深受其害，所以想要写这个小程序提供一些宿舍和私人公寓等等的基本信息、位置信息、图片、住户评论信息和交流平台，希望能让以后要找宿舍的朋友方便一些，减少一点租房的困扰，专心学习（大概）。本程序完善后会完全开源，个人精力也有限，能做的不多，希望有想法的同学一起开发。（功能不完善…）</p><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/public/miniprogramblog.jpg"  alt=""></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><blockquote><p>因为精力有限，现在只有宿舍信息，后续如果有人帮忙会添加更多私人公寓数据</p></blockquote><h3 id="提供了许多获取宿舍信息的入口"><a href="#提供了许多获取宿舍信息的入口" class="headerlink" title="提供了许多获取宿舍信息的入口"></a>提供了许多获取宿舍信息的入口</h3><h4 id="搜索栏"><a href="#搜索栏" class="headerlink" title="搜索栏"></a>搜索栏</h4><ul><li><input checked="" disabled="" type="checkbox"> 根据输入的关键字快速搜索</li><li><input checked="" disabled="" type="checkbox"> 点击搜索栏弹出热门标签，点击标签可以显示相关内容</li></ul><h4 id="主页"><a href="#主页" class="headerlink" title="主页"></a>主页</h4><ul><li><input checked="" disabled="" type="checkbox"> swiper部分显示重要公告</li><li><input checked="" disabled="" type="checkbox"> 学校宿舍目录</li><li><input disabled="" type="checkbox"> 商业宿舍目录</li><li><input checked="" disabled="" type="checkbox"> 公告和帖子</li><li><input disabled="" type="checkbox"> 发布私房</li><li><input disabled="" type="checkbox"> 发布帖子</li><li><input disabled="" type="checkbox"> 发布租房信息</li></ul><h4 id="地图页"><a href="#地图页" class="headerlink" title="地图页"></a>地图页</h4><blockquote><p>注意⚠️ 地图页超市、学校等信息并不完整，仅作为参考</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> 点击宿舍的地图标记名称可以跳转到详情页面</li><li><input checked="" disabled="" type="checkbox"> 右下角标记过滤器，可以选择在地图上显示/隐藏宿舍、学校、食堂、超市、其他标记</li><li><input checked="" disabled="" type="checkbox"> 右下角获取用户定位按钮</li><li><input checked="" disabled="" type="checkbox"> 右下角显示所有标记按钮  </li></ul><h3 id="宿舍详情页面"><a href="#宿舍详情页面" class="headerlink" title="宿舍详情页面"></a>宿舍详情页面</h3><h4 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h4><ul><li><input checked="" disabled="" type="checkbox"> 名称、地址、标签、简介等基础信息</li><li><input checked="" disabled="" type="checkbox"> 宿舍类型、大小、数量、是否装修、价格信息</li><li><input checked="" disabled="" type="checkbox"> 点击地址、官网、申请可复制链接（官方规定个体开发者不支持跳转到网页）</li><li><input checked="" disabled="" type="checkbox"> 收藏按钮，点击后加入收藏，可在我的-收藏页查看收藏的内容</li><li><input checked="" disabled="" type="checkbox"> 图片和位置信息</li></ul><h4 id="社区"><a href="#社区" class="headerlink" title="社区"></a>社区</h4><ul><li><input checked="" disabled="" type="checkbox"> 社区按钮点击后显示管理员二维码，扫描二维码加入对应位置的社区微信群，接触到其他已经入住的居民</li><li><input disabled="" type="checkbox"> 点击按钮询问是否加入/离开社区，居民数自动+1/-1</li><li><input disabled="" type="checkbox"> 社区居民接送求助信息</li></ul><h4 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h4><ul><li><input checked="" disabled="" type="checkbox"> 可以发送评论和回复评论</li><li><input checked="" disabled="" type="checkbox"> 调取评论总数</li><li><input disabled="" type="checkbox"> 用户上传图片</li></ul><h3 id="还可以加点什么（有兴趣的同学可以试下）"><a href="#还可以加点什么（有兴趣的同学可以试下）" class="headerlink" title="还可以加点什么（有兴趣的同学可以试下）"></a>还可以加点什么（有兴趣的同学可以试下）</h3><h4 id="标签系统"><a href="#标签系统" class="headerlink" title="标签系统"></a>标签系统</h4><ul><li>在详情页面用户可以自行添加标签</li></ul><h5 id="有什么用"><a href="#有什么用" class="headerlink" title="有什么用"></a>有什么用</h5><ul><li><p>公寓详情页面标签按照用户的使用频率从大到小自动排序，只显示前xx个标签。</p><ul><li>可以筛选出大家最认可的几个标签。</li></ul></li><li><p>搜索系统根据输入标签匹配搜索结果。</p></li></ul><h4 id="发布房源-amp-求租信息"><a href="#发布房源-amp-求租信息" class="headerlink" title="发布房源&amp;求租信息"></a>发布房源&amp;求租信息</h4><blockquote><p>发布的房源可以分为下面四种类型，详情页面和宿舍详情类似，需要做一个内容编辑页面填写发布房源的内容。</p></blockquote><ul><li><p>类型</p><ul><li>寻找室友：已找到房的同学寻室友</li><li>求房信息</li><li>我要那和</li><li>房东直出</li></ul></li><li><p>发布内容</p><ul><li>房源介绍或者求房的要求</li><li>图片</li><li>标签</li><li>联系方式</li></ul></li><li><p>难点</p><ul><li>防诈骗，可能有法律风险</li></ul></li></ul><h4 id="发布经验贴或者公告"><a href="#发布经验贴或者公告" class="headerlink" title="发布经验贴或者公告"></a>发布经验贴或者公告</h4><ul><li>内容<ul><li>简单的文章</li><li>作者信息</li><li>可以分享</li></ul></li><li>难点<ul><li>感觉写经验分享的人很少。</li><li>如果挺多的话需要大点的服务器，买不起，求赞助。</li></ul></li></ul><h3 id="其他想法"><a href="#其他想法" class="headerlink" title="其他想法"></a>其他想法</h3><p>给有想法的同学提供点思路，可以根据这个小程序的结构和思路制作一些其他方面的工具，也可以和本程序整合在一起。在国外生活虽然难，但是有微信把大家连接在一起，只要互相帮助大家的生活其实会轻松不少。</p><h4 id="其他城市支持"><a href="#其他城市支持" class="headerlink" title="其他城市支持"></a>其他城市支持</h4><ul><li>按说这个小程序适合很多对华人留学生来说找房困难的地方。</li><li>所以，只要搜集足够房源信息，地图信息，标签信息，就可以增加切换城市的功能照搬用了。</li></ul><h4 id="食堂-amp-学校周边餐厅饮食评价"><a href="#食堂-amp-学校周边餐厅饮食评价" class="headerlink" title="食堂&amp;学校周边餐厅饮食评价"></a>食堂&amp;学校周边餐厅饮食评价</h4><p>大家也知道在德国留学，食堂选菜是个技术活，一不小心就踩坑，实在难以下咽，而且完全了解食堂的菜谱不太可能，所谓前人栽树后人称乘凉，如果可以让善良的学长学姐分享一下经验，把踩过的坑收集起来，可能生活会好过许多。</p><ul><li>Todo<ul><li>爬取学校官网的每日菜单或一周菜单，通过机翻或者匹配翻译，把每日菜谱显示在小程序上<ul><li>决定哪天需要出门。</li></ul></li><li>仿照宿舍的评价，对食堂里的菜收集并评价，制作烂番茄系统<ul><li>选出最难吃菜单，防止踩坑。（好吃可能说不准，难吃应该比较容易有共识。）</li><li>提供图片参考和评价。</li></ul></li></ul></li></ul><h4 id="活动-amp-社团信息发布"><a href="#活动-amp-社团信息发布" class="headerlink" title="活动&amp;社团信息发布"></a>活动&amp;社团信息发布</h4><p>来了德国之后发现大家嘴上不说，私底下却组织了很多活动小组，微信群什么的，但是我们这些不喜欢在学联群里说话的人完全没有加入的渠道，只能在家打游戏，生活比国内暗淡不少。其实多的不需要，整合一下微信群就够了。</p><ul><li>Todo<ul><li>社团展示模块<ul><li>自助发布社团信息</li><li>社团简介</li><li>微信群二维码</li></ul></li><li>活动瀑布流<ul><li>用户发布活动</li><li>活动详情（类型，时间，地点，费用）</li><li>活动群二维码</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序UI组件推荐</title>
      <link href="/blog/2020/02/22/%E5%B0%8F%E7%A8%8B%E5%BA%8FUI%E7%BB%84%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
      <url>/blog/2020/02/22/%E5%B0%8F%E7%A8%8B%E5%BA%8FUI%E7%BB%84%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="note primary">            <p>记录在制作小程序时使用的组件</p>          </div><h2 id="ColorUI"><a href="#ColorUI" class="headerlink" title="ColorUI"></a>ColorUI</h2><blockquote><p>ColorUI是一个css库！！！在你引入样式后可以根据class来调用组件，一些含有交互的操作也有，可以为你开发提供一些思路。<a href="https://www.color-ui.com/" target="_blank" rel="noopener">下载</a>|<a href="https://github.com/weilanwl/ColorUI" target="_blank" rel="noopener">仓库</a>｜扫描下面二维码可以预览全部组件👇<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/22/uiMEAIZYFpPTGKB.png"  alt=""></p></blockquote><p>直接下载组件，根据官方Readme介绍，移动<code>/demo</code>（我把文件名改为colorui）到小程序目录里即可，我是创建了文件夹<code>components</code>用于统一管理外部组件，结构如下。</p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/22/KAlbTFatwoev3yk.png"  alt=""></p><p>下一步要在全局样式表<code>app.wxss</code>中导入样式（注意自己的路径⚠️）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">'./components/colorui/main.wxss'</span>; # 样式</span><br><span class="line"><span class="keyword">@import</span> <span class="string">'./components/colorui/icon.wxss'</span>; # 图标</span><br></pre></td></tr></table></figure><p>然后就可以在自己的Pages里调用样式了，作者并没有提供详尽的使用说明，所以可以先在手机上看Demo效果，然后去对应<code>.wxml</code>文件里找到位置，找到标签，如果需要修改可以去对应<code>main.wxss</code>文件中<code>Ctrl+F</code>找到修改源码，或者自己写css覆盖。</p><p>ColorUI是我一直使用的UI组件，所以详细介绍一下，当然还又很多其他的UI组件也不错。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="">iViewUI</a></li><li><a href="">MinUI</a></li><li><a href="">TaroUI</a></li><li><a href="">Vant组件</a></li><li><a href="">WuxUI</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 入门 </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序功能组件推荐</title>
      <link href="/blog/2020/02/22/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E7%BB%84%E4%BB%B6%E6%8E%A8%E8%8D%90/"/>
      <url>/blog/2020/02/22/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8A%9F%E8%83%BD%E7%BB%84%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>最近出于兴趣在做小程序的开发，所以找了很多“轮子”，大多数开源组件都不尽人意，这里挑出几个好用的分享一下。</p><h2 id="NewWxComment-为数不多的评论组件"><a href="#NewWxComment-为数不多的评论组件" class="headerlink" title="NewWxComment 为数不多的评论组件"></a>NewWxComment 为数不多的评论组件</h2><p><a href="https://github.com/yicm/NewWxComment" target="_blank" rel="noopener">仓库</a> | <a href="https://github.com/yicm" target="_blank" rel="noopener">作者</a></p><blockquote><p>NewWxComment<a href="https://github.com/yicm/NewWxComment是一个微信小程序的评论组件，结合BaaS提供商LeanCloud，无需其他另外的个人或者云服务器，就可以免费使用。解决了需要个人去注册域名、备案、购买云服务器的繁杂问题。且兼容Valinehttps://github.com/xCss/Valine评论，打通PC端和移动端评论，特别适合使用Valine评论系统且想同时开发小程序文章评论的同学们" target="_blank" rel="noopener">https://github.com/yicm/NewWxComment是一个微信小程序的评论组件，结合BaaS提供商LeanCloud，无需其他另外的个人或者云服务器，就可以免费使用。解决了需要个人去注册域名、备案、购买云服务器的繁杂问题。且兼容Valinehttps://github.com/xCss/Valine评论，打通PC端和移动端评论，特别适合使用Valine评论系统且想同时开发小程序文章评论的同学们</a>.</p></blockquote><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>独立插件，独立放入小程序项目即可使用</li><li>打通Valine评论系统，统一PC端和小程序端</li><li>友好的UI界面和交互界面</li><li>与微信用户信息绑定，显示微信用户头像和昵称</li><li>支持文章阅读量统计功能</li><li>支持评论回复功能，即子评论</li><li>支持emoji表情显示😉</li><li>支持评论分页加载</li><li>支持评论分页参数设置</li><li>内置获取微信用户公共信息授权</li><li>支持light/dark两种主题</li><li>机型兼容友好，包括全面屏iphone11等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 入门 </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为本博客添加新特性记录</title>
      <link href="/blog/2020/02/17/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%89%B9%E6%80%A7%E8%AE%B0%E5%BD%95/"/>
      <url>/blog/2020/02/17/%E4%B8%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%89%B9%E6%80%A7%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="暂时使用Google-Translate翻译网站充当英文网站"><a href="#暂时使用Google-Translate翻译网站充当英文网站" class="headerlink" title="暂时使用Google Translate翻译网站充当英文网站"></a>暂时使用Google Translate翻译网站充当英文网站</h2><p>使用方法：<br>  直接添加链接🔗 <code>https://translate.google.com/translate?hl=en&amp;sl=zh-CN&amp;u=https://your/website</code><br>  <a href="https://translate.google.com/translate?hl=en&sl=zh-CN&u=https://zkpeace.com" target="_blank" rel="noopener">Demo</a><br>  虽然效果比较差，很多插件甚至不能加载，但是先用着吧，万一有English speaker想看呢😂</p><h2 id="Weight利用微博Api嵌入个人动态Card"><a href="#Weight利用微博Api嵌入个人动态Card" class="headerlink" title="Weight利用微博Api嵌入个人动态Card"></a>Weight利用微博Api嵌入个人动态Card</h2><ul><li>在主题目录创建一个html文件</li><li>参照其他weight的引用和创建方式创建一个‘动态’Weight</li><li>在相关pug文件中引入创建的html文件</li><li>使用微博开放平台的<a href="https://open.weibo.com/livestreamset.php" target="_blank" rel="noopener">微博直播组件</a>生成iframe代码放入html文件</li></ul><p><a href="https://bili33.top/2020/03/19/butterfly-customize/#%E5%8F%8B%E9%93%BE%E9%93%BE%E6%8E%A5%E5%8C%BA%E5%9D%97%E5%8A%A0%E5%85%A5%E4%B8%80%E8%A1%8C%E5%B0%8F%E5%AD%97" target="_blank" rel="noopener">参考文章</a></p><h2 id="‘关于页’添加视屏介绍"><a href="#‘关于页’添加视屏介绍" class="headerlink" title="‘关于页’添加视屏介绍"></a>‘关于页’添加视屏介绍</h2><ul><li>用ipad上的Videoleap软件制作了视频</li><li>在about页面直接添加了 <code>video</code>标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> </span></span><br><span class="line">  &lt;!-- autoplay='autoplay',</span><br><span class="line">  muted='muted',</span><br><span class="line">  loop='loop', --&gt;</span><br><span class="line">  src='https://img-1253324855.cos.ap-chengdu.myqcloud.com/video.mp4' </span><br><span class="line">  type='video/mov'</span><br><span class="line">  width='100%'</span><br><span class="line">  controls="controls"</span><br><span class="line">  preload="auto"</span><br><span class="line">  height='100%'</span><br><span class="line">  poster='https://img-1253324855.cos.ap-chengdu.myqcloud.com/videoposter.jpg'&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="浏览器推送"><a href="#浏览器推送" class="headerlink" title="浏览器推送"></a>浏览器推送</h2><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/pusher.png"  alt="效果图"></p><ul><li><p>在<a href="https://www.webpushr.com/" target="_blank" rel="noopener">Webpusher</a>注册账号，自定义弹窗</p></li><li><p>安装<a href="https://github.com/glazec/hexo-web-push-notification" target="_blank" rel="noopener">hexo-web-push-notification</a></p></li><li><p>在hexo根目录_config.yml文件中添加配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">webPushNotification:</span></span><br><span class="line"><span class="attr">webpushrKey:</span> <span class="string">"your webpushr rest api key"</span></span><br><span class="line"><span class="attr">webpushrAuthToken:</span> <span class="string">"your webpushr authorize token"</span></span><br><span class="line"><span class="attr">trackingCode:</span> <span class="string">""</span></span><br><span class="line"><span class="string">&lt;!--</span> <span class="string">相关的信息可以在webpusher找到</span> <span class="string">--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>完成以后可以直接在Webpusher管理推送，更新文章也可以自动推送</p></li></ul><p><a href="https://www.inevitable.tech/posts/98ae9e55/" target="_blank" rel="noopener">参考文章</a></p><h2 id="书影页改为iframe嵌入网页"><a href="#书影页改为iframe嵌入网页" class="headerlink" title="书影页改为iframe嵌入网页"></a>书影页改为iframe嵌入网页</h2><p>现在hexo有一个调取豆瓣数据的插件<a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">hexo-douban</a>，调取的内容和排版我都不满意，还是喜欢豆瓣的页面，自己写有太麻烦，本来添加了外链，但是太多外链还是影响体验，索性在页面里嵌套了豆瓣的书影音档案链接，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-tag">iframe</span>&#123;<span class="attribute">width</span>:<span class="number">103%</span>;<span class="attribute">height</span>:<span class="number">2000px</span>;<span class="attribute">border</span>: none&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#iframe</span>&#123;<span class="attribute">overflow</span>:hidden&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"iframe"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">height</span>=<span class="string">"100%"</span> <span class="attr">src</span>=<span class="string">"https://m.douban.com/people/43103367/subject_profile"</span> <span class="attr">sandbox</span>=<span class="string">"allow-forms allow-scripts allow-same-origin allow-popups"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中使用了两个小tricks：</p><ul><li>隐藏滚动条。只是隐藏了滚动条并没有隐藏滚动功能，实现的方法是设置<code>iframe</code>标签的<code>width</code>大于100%，然后设置iframe的外层<code>div</code>为<code>overflow:hidden</code>，就可以隐藏标签，经过调试我选择宽度为<code>103%</code> 。其实<code>iframe</code>本身有隐藏滚动条的属性<code>scrolling:no</code>但是这样就不能滑动标签了，对于高度不固定的页面有可能不能完全显示，自己写js又太麻烦，所以在要求不高的情况下这个方法还是不错的。</li><li>防止网页重定向。添加标签：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sandbox&#x3D;&quot;allow-forms allow-scripts allow-same-origin allow-popups&quot;</span><br></pre></td></tr></table></figure>  属性解释：<br>  <img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/20/UAYnmsNvPZeJ9Vl.png"  alt=""></li></ul><h2 id="添加了动画猫"><a href="#添加了动画猫" class="headerlink" title="添加了动画猫"></a>添加了动画猫</h2><p>偶然看到别人家的博客有只灰猫，和我家的很像，也想来一只，于是下载了hexo live2d的插件：<a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">hexo-helper-live2d</a>，<br>使用起来相当方便。<br>安装：</p><pre><code>npm install --save hexo-helper-live2d</code></pre><p>在<code>_config.yml</code>里配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动画宠物</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span> <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line"><span class="attr">pluginJsPath:</span> <span class="string">lib/</span>  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line"><span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line"><span class="attr">tagMode:</span> <span class="literal">true</span>  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line"><span class="attr">debug:</span> <span class="literal">false</span> <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line"><span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span> <span class="comment"># 指定模型</span></span><br><span class="line"><span class="attr">display:</span> <span class="comment"># 调整大小位置</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">200</span></span><br><span class="line"><span class="attr">mobile:</span> <span class="comment"># 是否在小屏显示</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">react:</span>  <span class="comment"># 透明度</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.8</span></span><br></pre></td></tr></table></figure><p>更详细的配置可以查看<a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">官方文档</a>。</p><p>这里我打开了标签模式，关闭的模型会出现在所有界面。因为我觉得小猫在主页影响观感，不够简洁，于是只把他放在“关于“里饲养。</p><p>添加标签到“关于页面”：<code>{{ live2d() }}</code> or<code>&lt;%- live2d() %&gt;</code></p><h2 id="添加FM页面增加音乐播放器"><a href="#添加FM页面增加音乐播放器" class="headerlink" title="添加FM页面增加音乐播放器"></a>添加FM页面增加音乐播放器</h2><p>使用插件：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-aplayer</a></p><p>这是一个Aplayer播放器的Hexo插件，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放，功能强大配置简单。</p><p>安装：</p><pre><code>npm install --save hexo-tag-aplayer</code></pre><p>在<code>_cogig.yml</code>配置：</p><pre><code>aplayer:    meting: true</code></pre><p>在页面添加标签：<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md#meingjs-%E6%94%AF%E6%8C%81-30-%E6%96%B0%E5%8A%9F%E8%83%BD" target="_blank" rel="noopener">配置详情</a></p><pre><code>{% meting... %}</code></pre><h2 id="外观优化"><a href="#外观优化" class="headerlink" title="外观优化"></a>外观优化</h2><ul><li><p>重新设计Wight中的公告卡片</p><ul><li><p>直接在<code>card——announcement.pug</code>文件中更改了结构</p></li><li><p>学习了模版引擎<a href="https://pugjs.org/api/getting-started.html" target="_blank" rel="noopener">Pug</a>（原Jade）</p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/18/1JVAMgk5EruhmSc.png"  alt="1"></p></li></ul></li><li><p>对相册页面删繁就简</p></li><li><p>添加足迹页面</p><ul><li>通过<a href="https://www.google.com/intl/zh-CN/maps/about/mymaps/" target="_blank" rel="noopener">GoogleMap 我的地图</a>制作了足迹地图。</li></ul></li><li><p>菜单栏结构调整</p></li><li><p>悬浮显示微信公众号二维码</p><ul><li>完全css实现，参照了文章界面下方donate弹出二维码的样式</li></ul></li></ul><h2 id="使用Pjax优化博客"><a href="#使用Pjax优化博客" class="headerlink" title="使用Pjax优化博客"></a>使用Pjax优化博客</h2><p>具体我放在<a href="">使用Pjax优化博客添加全局播放器记录</a></p><p>刚想搞Pjax的时候询问了主题创者者，他说Pjax是个大坑所以没有在主题里添加，但是我还是留恋全局播放器和网站加载的飞速体验，最后试了两个插件如下：</p><ul><li><a href="https://github.com/MoOx/pjax" target="_blank" rel="noopener">MoOx</a></li><li><a href="https://github.com/defunkt/jquery-pjax" target="_blank" rel="noopener">jQurey-pjax</a></li></ul><p>推荐第一个优点是指定多个容器的操作更加方便。</p><p>尚未启用.</p><h3 id="添加全局音乐播放器"><a href="#添加全局音乐播放器" class="headerlink" title="添加全局音乐播放器"></a>添加全局音乐播放器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 首先引入相关的css和js外链</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在music-player.pug中配置meting-js标签，注意这里要设置成fixed吸底模式</span></span><br><span class="line">.music-player</span><br><span class="line">     meting-js(server=<span class="string">'netease'</span>, <span class="comment">// 服务器 网易云</span></span><br><span class="line">               type=<span class="string">'playlist'</span>, <span class="comment">// 类型 播放列表</span></span><br><span class="line">               id=<span class="string">'2962395686'</span>, <span class="comment">// 列表编号</span></span><br><span class="line">               fixed=<span class="string">'true'</span>,    <span class="comment">// 吸底模式</span></span><br><span class="line">               theme=<span class="string">'#2c2c2c'</span>, <span class="comment">//主题色</span></span><br><span class="line">               lrc-type=<span class="string">'2'</span> <span class="comment">// 本身是指定div显示歌词，也可以以此方法取消歌词显示</span></span><br><span class="line">               ) </span><br><span class="line"></span><br><span class="line"><span class="comment">// 在layout中引入</span></span><br><span class="line"><span class="keyword">if</span> !isMobile <span class="comment">// 这里我只在网页版加载全局播放器</span></span><br><span class="line">    include ./music-player.pug</span><br></pre></td></tr></table></figure><p>由于影响文章页面目录toc的显示和关闭，暂时关闭。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记事 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>番茄工作法自制表格分享</title>
      <link href="/blog/2020/02/12/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95%E8%87%AA%E5%88%B6%E8%A1%A8%E6%A0%BC%E5%88%86%E4%BA%AB/"/>
      <url>/blog/2020/02/12/%E7%95%AA%E8%8C%84%E5%B7%A5%E4%BD%9C%E6%B3%95%E8%87%AA%E5%88%B6%E8%A1%A8%E6%A0%BC%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>相关书籍📚：<a href="https://www.douban.com/doubanapp/dispatch/book/34820460?dt_dapp=1" target="_blank" rel="noopener">番茄工作法</a><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/12/qHcQN1x6rAW7TFM.jpg"  alt="IMG_2549.jpg"></p><h2 id="⏬下载地址"><a href="#⏬下载地址" class="headerlink" title="⏬下载地址"></a><a href="https://1drv.ms/b/s!Ao2TSSfPFfGrtSt06gTPpi-_KuQp?e=AufQOt" target="_blank" rel="noopener">⏬下载地址</a></h2><p>提取密码：zkpeace</p><p>效果预览：<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/12/l57LDFWS3v2kGcX.png"  alt="1"><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/12/Ynj4skuNc1pJWVP.png"  alt="2"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 效率 </tag>
            
            <tag> 番茄工作法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac软件推荐：🔧 工具类</title>
      <link href="/blog/2020/02/04/Mac%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%901/"/>
      <url>/blog/2020/02/04/Mac%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%901/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="iTerm2——随叫随到的终端窗口"><a href="#iTerm2——随叫随到的终端窗口" class="headerlink" title="iTerm2——随叫随到的终端窗口"></a>iTerm2——随叫随到的终端窗口</h2><p><img src="/blog/" class="lazyload" data-src="https://iterm2.com/img/logo2x.jpg"  alt=""></p><p>可能是Mac最好用的终端工具,拥有众多迷人的特性，我被他吸引的原因是快捷键迅速呼出终端，有人在身边，快捷键一按，再输入几个命令行，装🍺。我好像用了他再也没打开过系统terminal。<br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/Mar-02-2020%2000-34-08.gif"  alt=""><br>当然他的实用功能更让人留恋：</p><ul><li>标签变色</li><li>智能选中</li><li>Meta键</li><li>切分屏幕</li><li>自动补全命令</li><li>自定义配色</li></ul><h2 id="Mos——用于在MacOS上平滑你的鼠标滚动效果的小工具-让你的滚轮爽如触控板"><a href="#Mos——用于在MacOS上平滑你的鼠标滚动效果的小工具-让你的滚轮爽如触控板" class="headerlink" title="Mos——用于在MacOS上平滑你的鼠标滚动效果的小工具, 让你的滚轮爽如触控板"></a>Mos——用于在MacOS上平滑你的鼠标滚动效果的小工具, 让你的滚轮爽如触控板</h2><p>可能你从来没在意过Mac触控版浏览网页上下滑动时的顺滑感觉，如果仔细和用外链鼠标滑动效果比一次的话，就会发现后者的体验非常粗糙。Mos优化了键鼠滚轮浏览网页时的体验，还原mac触控板的滚动效果，虽然是个不起眼的小细节，但有种用了就停不下来的感觉。支持maxos<a href="https://github.com/Caldis/Mos" target="_blank" rel="noopener">⏬下载</a></p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/05/dRuZqGvXSnxkojl.png"  alt="Mos logo"></p><h2 id="PicGo——用于快速上传图片并获取图片URL链接的工具"><a href="#PicGo——用于快速上传图片并获取图片URL链接的工具" class="headerlink" title="PicGo——用于快速上传图片并获取图片URL链接的工具"></a>PicGo——用于快速上传图片并获取图片URL链接的工具</h2><p>尝试过写博的人都知道图床的好处，这个开源小工具，极大的方便了mac用户使用图床的体验，截图-上传-复制链接一气呵成，支持众多主流图床，还可以下载插件链接私人图床，好用到爆炸。支持win，macos，linux。<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">⏬下载</a></p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/05/f2YVWSE5Xwzr3Gc.png"  alt="PicGo Logo"></p><h2 id="Dash——轻松查阅超过200个离线文档的私人档案库"><a href="#Dash——轻松查阅超过200个离线文档的私人档案库" class="headerlink" title="Dash——轻松查阅超过200个离线文档的私人档案库"></a>Dash——轻松查阅超过200个离线文档的私人档案库</h2><p>写代码的同学肯定收藏夹里可定有各种语言和库官方文档api，拥有这个软件可以省去你打开浏览器查文档的麻烦，它囊括几乎所有主流语言和库的官方api，支持下载后离线查看。还有本人最喜欢使用的cheatsheet，再用不用害怕自己记性差了。支持macos。<a href="https://kapeli.com/dash" target="_blank" rel="noopener">⏬下载</a></p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/05/UhZPogYFeQCO2Km.png"  alt="Dash Logo"></p><h2 id="uTools——极简、插件化、跨平台的现代化桌面软件"><a href="#uTools——极简、插件化、跨平台的现代化桌面软件" class="headerlink" title="uTools——极简、插件化、跨平台的现代化桌面软件"></a>uTools——极简、插件化、跨平台的现代化桌面软件</h2><p>叫板spotlight！除了简单程序启动器功能还能安装众多插件，例如翻译，Google，文档，微信多开，钉钉等等。我主要使用他的翻译插件，只需要一个快捷键快速开启，而且整合众多翻译软件，多，快，好，省。支持win，macos，linux。<a href="https://u.tools/" target="_blank" rel="noopener">⏬下载</a></p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/10/5XBDwnPKa3SupNE.png"  alt="uTools Logo"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 测评 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> Mac </tag>
            
            <tag> 软件 </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图形学笔记：变换 Transformations</title>
      <link href="/blog/2020/01/29/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%8F%98%E6%8D%A2Transformations/"/>
      <url>/blog/2020/01/29/%E5%9B%BE%E5%BD%A2%E5%AD%A6%E7%AC%94%E8%AE%B0%EF%BC%9A%E5%8F%98%E6%8D%A2Transformations/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="note info">            <p>未完待续… …</p>          </div><blockquote><p>从这篇文章开始整理我在学校学到的计算机图形学相关知识，原则是如果在网上没有找到清楚的解释，我会尝试自己解释出来，如果找到了就直接贴链接。</p></blockquote><h2 id="CG和CV的关系"><a href="#CG和CV的关系" class="headerlink" title="CG和CV的关系"></a>CG和CV的关系</h2><p>首先想解释一下 Computer Graphics和 Computer Vision的关系和区别.<br>大致上讲，CG是图像和视频合成的工具和机制，而CV通常用于分析和提取视频和图像的语义内容，这两个领域的技术没有明显的界限，但是目的稍有不同。</p><p><img src="/blog/" class="lazyload" data-src="https://cfyksa.am.files.1drv.com/y4m6_SykGFijoXo44Z1HFAjRmJRTG4mHVgvxDWdTcN2LCqLJjIRkXZYG8eOScepnMgBnflZ4ykpHd04JPcpTBfBYVk0aPIxXuWkT11C-YwVx9bVYgoH_5-sp-6k0oIWZHTapk2w082LywOIWHoI47WIP0Wkl6SExKxdJnKWLOJ5W_MZgH4pWxJEJW9WAJOKZo4bq9DOBh2ck1i3d61IGiYchg?width=3517&height=1469&cropmode=none"  alt="fig1"></p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="向量积-Vector-Cross-product"><a href="#向量积-Vector-Cross-product" class="headerlink" title="向量积 Vector Cross product"></a>向量积 Vector Cross product</h3><p>关于<a href="https://en.wikipedia.org/wiki/Cross_product" target="_blank" rel="noopener">Cross product</a>维基百科解释的非常详细。<br>$$\vec u\times\vec v=|\vec u||\vec v|sin\theta\vec c$$<br>需要特别注意的是两个向量<strong>u</strong>和<strong>v</strong>在三维空间的叉乘的几何意义</p><h3 id="数量积-Vector-Dot-Product"><a href="#数量积-Vector-Dot-Product" class="headerlink" title="数量积 Vector Dot Product"></a>数量积 Vector Dot Product</h3><p>关于<a href="https://en.wikipedia.org/wiki/Dot_product" target="_blank" rel="noopener">Dot Product</a> 的相关知识。<br>$$\vec u\cdot\vec v=|\vec u||\vec v|cos\theta$$</p><h2 id="变换"><a href="#变换" class="headerlink" title="变换"></a>变换</h2><h3 id="仿射组合-The-affine-combination"><a href="#仿射组合-The-affine-combination" class="headerlink" title="仿射组合 The affine combination"></a>仿射组合 The affine combination</h3><p>首先通过下文先了解一下什么是仿射变换或者叫仿射映射.</p><p><a href="https://www.zhihu.com/question/20666664/answer/157400568" target="_blank" rel="noopener">如何通俗地讲解「仿射变换」这个概念？ - 马同学的回答 - 知乎</a></p><p>而仿射函数实际上就是表示这一变换过程的函数，一般形式是$f(\vec x)=A\vec x+\vec b$,$A$是一个$m\times k$矩阵，$\vec x$是一个$k$向量, $\vec b$是一个$m$向量。</p><p>仿射组合的概念更加抽象，可以通过下面这个例子了解一下两个二维向量的仿射组合：</p><p><a href="https://www.zhihu.com/question/294185249/answer/489541869" target="_blank" rel="noopener">仿射组合为什么代表一条线？ - 电猫哥electricat的回答 - 知乎</a></p><p>这个例子证明了两个二维向量的仿射组合可以代表一条直线，可以发现仿射组合其实是对于给定向量$\vec v_1,\vec v_2$（者点$p_1，p_2$）与一组权重$[\lambda_0,\lambda_1]$的线性变换，而且必须满足$\lambda_1+\lambda_2=1$，即$\vec y=\lambda_1\vec v_1+\lambda_2\vec v_2$。推广到$n$个向量定义如下：<br>$$ 组合 \{v\in V|v=\sum_{i=0}^{n}\lambda_iv_i,with\sum_{i=0}^{n}\lambda_i=1\} 被称为向量v_i的仿射组合$$</p><p>未完，这部分以后会补张图…）</p><h3 id="重心坐标-Barycentric-Coordinates"><a href="#重心坐标-Barycentric-Coordinates" class="headerlink" title="重心坐标 Barycentric Coordinates"></a>重心坐标 Barycentric Coordinates</h3><p>上面介绍的内容其实隐含了一个前提：坐标系类型已确定。在数学中，坐标系的类型很多，例如<a href="https://zh.wikipedia.org/wiki/齐次坐标" target="_blank" rel="noopener">齐次坐标系（homogeneous coordinates or projective coordinates）</a>，和<a href="https://zh.wikipedia.org/wiki/笛卡尔坐标系" target="_blank" rel="noopener">笛卡尔坐标系（Cartesian coordinate system）</a>,在不同的坐标系下，对事物的描述方法和变换自然是不同的。各个坐标的关系可以参考下面的文章：</p><p><a href="https://zhuanlan.zhihu.com/p/59889485" target="_blank" rel="noopener">从带号面积到坐标系的建立 - PeaucellieRay的文章 - 知乎</a></p><p>这里主要介绍一下重心坐标系，找到一片讲的比较清楚的文章。</p><p><a href="https://zhuanlan.zhihu.com/p/58199366" target="_blank" rel="noopener">重心坐标（Barycentric coordinates） - 杨超的文章 - 知乎</a></p><p>通过上文其实我们可以发觉重心坐标的表示方法就是点$P_i$的仿射组合，而$w_i$就是组合权重。<br>值得注意的是，上文的三角形其实是放在一个仿射空间（affine space）里的。维基百科这样描述仿射空间：</p><blockquote><p>仿射空间是没有起点只有方向大小的向量所构成的向量空间。</p></blockquote><p>我的理解是仿射空间就是没有原点的线性空间，这里就不展开讨论了。</p><p>回到重心坐标的话题上来，通过结合仿射组合，有下面的定义:</p><p>$$在一个仿射空间的坐标系内，给出点集B=\{p_0,…p_n\}和点p的仿射组合:$$</p><p>$$p=\sum_{i=0}^{n}\lambda_ip_i\ with\ \lambda_i\ge0;\ \sum_{i=0}^{n}\lambda_i=1\lambda_i$$</p><p>$$就是点p的重心坐标（barycentric\ coordinates).$$</p><p><img src="/blog/" class="lazyload" data-src="https://dvalva.am.files.1drv.com/y4m4dzIxj7tzZeE109HAFsICkaN4pGkH1yDmmbK2ENkfGggRz4G-zHCW1TmIhSvi17qmKMrqC21Y-Ii3WW6J9nRxferDdcalJsV8lpPKSvUuoI416rpcB8XmiFSU7voIxRbfHl9oTlH7Q7EcR2JMuof-AWPnwhGO9fMO-X4MwaUhFx43l3k0R-JNnhI1rsqrqee1C2EzE4mFFSNNaTPWCi9sQ?width=3518&height=1328&cropmode=none"  alt="fig2"></p><p>通过多个点确定一个坐标确实感觉很费劲，但是如上个链接里的文章所说，这个坐标系大有可为，在计算机图形学中需要使用一个非常重要的技术——<a href="https://zh.wikipedia.org/wiki/线性插值" target="_blank" rel="noopener">线性插值</a>，就用到重心坐标，这个以后的文章一定也会提到。</p><h3 id="凸包-Convex-Hulls"><a href="#凸包-Convex-Hulls" class="headerlink" title="凸包 Convex Hulls"></a>凸包 Convex Hulls</h3><p>凸包的几何意义是给定空间一堆离散的点，计算能够包含这些点的一个凸多边形,如下图可以用凸包将general mesh的点精简成convex mesh，在碰撞检测中省去了大量内存。</p><p><img src="/blog/" class="lazyload" data-src="https://cqbg0a.am.files.1drv.com/y4mSmnEo6uIV4YX4pFPtxoyQfsbeqlGVJOEB-2HiOqpuRIUqaMzWzHZjq1rcR2XDfS0ds51Js15qXHyBw0XdJlIwiu1ml0uohD81eW3nqajqCWclqw2FiYox9lFyv0fnd4PfJ8OaPFY1Y4B4k4_Y7to2duYgZhSzaTRk0dOSNnmkaxBjAVeNQ4guByB4AOrErkd2ksHri98XLAKgboi0kRbIA?width=1064&height=404&cropmode=none"  alt="fig3"></p><p>凸包的表示方法如下，可以发现可以利用仿射组合保证凸性（Convexity），原因暂不讨论。</p><p>$$点集 co\{p_0,…,p_n\}=\{p|p=\sum_{i=0}^{n}\lambda_ip_i,\sum_{i=0}^{n}\lambda_i,and\ \lambda_i\ge0,i=0,…,n\};co\{p_0,…,p_n\}就是点集p_1，…,p_n的凸包$$</p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/03/lniZ6AbcDEwBRPQ.jpg"  alt="cg01_fig_2.jpg"></p><h3 id="仿射映射-Affine-mappings"><a href="#仿射映射-Affine-mappings" class="headerlink" title="仿射映射 Affine mappings"></a>仿射映射 Affine mappings</h3><p>其实仿射映射跟前面所说的仿射变换的概念基本一致，这里重新详细的介绍一下，简单的说仿射映射就是线性变化加平移，维基百科里关于<a href="https://en.wikipedia.org/wiki/Affine_transformation" target="_blank" rel="noopener">仿射映射</a>给出了两个定义，第一个比较好理解如下：</p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/03/KezrA7yuv1UMih4.jpg"  alt="cg01_fig_3.jpg"></p><p>另一个定义对我来说比较难理解:</p><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/03/swEYJxeufmo6Kpk.jpg"  alt="cg01_fig_4.jpg"></p><p>我的理解是，在向量集（点集）中，每个向量$\vec a_i$通过变换后，对应的权重$\lambda_i$是不变的，既然权重没变，相对位也没有变，所以保留了这个向量集的重心。</p><p>仿射映射具有如下性质:</p><pre><code>1. 一条线映射之后还是一条线。2. 有限集映射后任然是有限集。3. 平行的物体（线，平面，...）映射后依然是平行的。4. 物体面积，体积和长度的所占比例在映射后不变。</code></pre><h3 id="刚性变换-Rigid-Transformation"><a href="#刚性变换-Rigid-Transformation" class="headerlink" title="刚性变换 Rigid Transformation"></a>刚性变换 Rigid Transformation</h3><p>刚性变换听着名字很奇怪，其实简单的说就是向量（点）只在位置和朝向上发生了改变的变换。下面两篇文从不同角度介绍了不同的坐标变换之间的关系，相互比较更容易理解。</p><p><a href="https://blog.csdn.net/liuweiyuxiang/article/details/86510191" target="_blank" rel="noopener">一文读懂图像中点的坐标变换(刚体变换，相似变换，仿射变换，投影变换)</a></p><p><a href="https://www.cnblogs.com/vincentcheng/p/7191014.html" target="_blank" rel="noopener">【Computer Vision】图像单应性变换/投影/仿射/透视</a></p><p>在了解完刚性变换的概念之后，给出如下定义：<br>$$一个坐标变换T如果满足：x,y\in\mathbb{R}^3:|T(x)-T(y)|=|x-y|，则这个变化是刚性的。$$</p><p>刚性变化有如下性质：</p><pre><code>1. 刚性变化就是一种仿射。2. 刚性变化包括：旋转（线性）；镜像（线性）；平移（非线性，但是可以通过齐次坐标“固定”，下面也会介绍。）</code></pre><h3 id="齐次坐标-Homogenous-Coordinates"><a href="#齐次坐标-Homogenous-Coordinates" class="headerlink" title="齐次坐标 Homogenous Coordinates"></a>齐次坐标 Homogenous Coordinates</h3>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 理论 </category>
          
          <category> CG </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 入门 </tag>
            
            <tag> CG </tag>
            
            <tag> 理论 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速掌握NumPy</title>
      <link href="/blog/2019/10/24/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1NumPy/"/>
      <url>/blog/2019/10/24/%E5%BF%AB%E9%80%9F%E6%8E%8C%E6%8F%A1NumPy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>NumPy(Numerical Python) 是 Python 语言的一个扩展程序库，支持大量的维度数组与矩阵运算，此外也针对数组运算提供大量的数学函数库。本文收集了numpy常用手册链接，速查表还有我写的入门实例代码。</p><h2 id="手册和学习网站"><a href="#手册和学习网站" class="headerlink" title="手册和学习网站"></a>手册和学习网站</h2><p><a href="https://numpy.org/devdocs/user/quickstart.html" target="_blank" rel="noopener">Numpy tutorial</a></p><p><a href="https://www.numpy.org.cn/reference/" target="_blank" rel="noopener">中文手册</a></p><p><a href="https://www.runoob.com/numpy/numpy-tutorial.html" target="_blank" rel="noopener">菜鸟教程</a></p><h2 id="NumPy-Cheat-Sheet"><a href="#NumPy-Cheat-Sheet" class="headerlink" title="NumPy Cheat Sheet"></a>NumPy Cheat Sheet</h2><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2020/02/05/Wmlo1OpUnfureX3.jpg"  alt=""></p><h2 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> numpy.matlib</span><br><span class="line"><span class="comment"># import numpy.linalg</span></span><br><span class="line"><span class="comment"># a. create a comment</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b. create a 1*4 row vector</span></span><br><span class="line">b = np.zeros(<span class="number">4</span>)</span><br><span class="line"><span class="comment"># print(b, b.shape)</span></span><br><span class="line"><span class="comment"># c. create a 5*1 column vector</span></span><br><span class="line">c = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]).reshape(<span class="number">5</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(c, c.shape)</span></span><br><span class="line"><span class="comment"># d. create a zero matrix using a function provided by numpy</span></span><br><span class="line">d = np.zeros((<span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line"><span class="comment"># print(d, d.shape)</span></span><br><span class="line"><span class="comment"># e. print the second row of an 4*3 array</span></span><br><span class="line">e = np.arange(<span class="number">12</span>).reshape(<span class="number">4</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># print(e[1, :])</span></span><br><span class="line"><span class="comment"># f. print the third column of an 4*4 array.</span></span><br><span class="line">f = np.arange(<span class="number">16</span>).reshape(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># print(f[:, 2])</span></span><br><span class="line"><span class="comment"># g. transpose an array.</span></span><br><span class="line">g = np.arange(<span class="number">10</span>, <span class="number">25</span>, <span class="number">2</span>).reshape(<span class="number">2</span>, <span class="number">4</span>).T</span><br><span class="line"><span class="comment"># print(g)</span></span><br><span class="line"><span class="comment"># h. create two array of equal size m*m. multiply them once using conventional matrix</span></span><br><span class="line"><span class="comment"># multiplication and once using elementwise multiplication.</span></span><br><span class="line">h1 = np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">h2 = np.arange(<span class="number">9</span>, <span class="number">18</span>).reshape(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"><span class="comment"># print(h1, h2)</span></span><br><span class="line">h3 = h1*h2</span><br><span class="line"><span class="comment"># print(h3)</span></span><br><span class="line">h4 = np.multiply(h1, h2)</span><br><span class="line"><span class="comment"># print(h4)</span></span><br><span class="line"><span class="comment"># i. Concate two arrays vertically, as well as horizontally</span></span><br><span class="line">i1 = np.arange(<span class="number">4</span>)</span><br><span class="line">i2 = np.arange(<span class="number">4</span>, <span class="number">8</span>)</span><br><span class="line">i3 = np.append(i1, i2)</span><br><span class="line">i4 = np.concatenate((i1, i2), axis=<span class="number">0</span>)</span><br><span class="line">i5 = np.vstack((i1, i2))</span><br><span class="line">i6 = np.hstack((i1, i2))</span><br><span class="line"><span class="comment"># print(i4, i5, i6)</span></span><br><span class="line"><span class="comment"># j. print the size of an array</span></span><br><span class="line">j = np.arange(<span class="number">10</span>).reshape(<span class="number">2</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># print(j.size)</span></span><br><span class="line"><span class="comment"># k. change the structure of a 8*7 array to 14*4.</span></span><br><span class="line">k = np.arange(<span class="number">56</span>).reshape(<span class="number">8</span>, <span class="number">7</span>)</span><br><span class="line">k1 = k.reshape(<span class="number">14</span>, <span class="number">4</span>)</span><br><span class="line"><span class="comment"># print(k, k1)</span></span><br><span class="line"><span class="comment"># l. replicate a 3*1 vector to an array of size 3*1000o</span></span><br><span class="line">l1 = np.arange(<span class="number">3</span>).reshape(<span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(l1)</span></span><br><span class="line">l2 = l1.repeat(<span class="number">1000</span>).reshape(<span class="number">3</span>, <span class="number">1000</span>)</span><br><span class="line"><span class="comment"># print(l2)</span></span><br><span class="line"><span class="comment"># m. replace all matrix entries less than 0 by 0.</span></span><br><span class="line">m = np.arange(<span class="number">-5</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment"># print(m)</span></span><br><span class="line">m1 = np.maximum(m, <span class="number">0</span>)</span><br><span class="line"><span class="comment"># print(m1)</span></span><br><span class="line"><span class="comment"># n. create a vector containing numbers from 1 to 100 with a gap of 7 between the numbers.</span></span><br><span class="line">n = np.arange(<span class="number">1</span>, <span class="number">100</span>, <span class="number">7</span>).T</span><br><span class="line"><span class="comment"># print(n)</span></span><br><span class="line"><span class="comment"># o. create a vector with 100 entries. set every second element to 0.</span></span><br><span class="line">o = np.arange(<span class="number">1</span>, <span class="number">100</span>).T</span><br><span class="line">o[<span class="number">1</span>::<span class="number">2</span>] = <span class="number">0</span></span><br><span class="line"><span class="comment"># print(o)</span></span><br><span class="line"><span class="comment"># p. create a vector with 100 entries. delete every second element.</span></span><br><span class="line">p = np.arange(<span class="number">100</span>).T</span><br><span class="line">p1 = np.delete(p, p[<span class="number">1</span>::<span class="number">2</span>])</span><br><span class="line"><span class="comment"># print(p1)</span></span><br><span class="line"><span class="comment"># q. create 2 arrays a,b of size 1000*3 containing random numbers.</span></span><br><span class="line">q1 = np.random.rand(<span class="number">1000</span>, <span class="number">3</span>)</span><br><span class="line">q2 = np.random.rand(<span class="number">1000</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># r. You can interprete the rows of such a arrays as vectors of size 1 × 3.</span></span><br><span class="line"><span class="comment"># Compute the dot product of those vectors using loops.</span></span><br><span class="line"><span class="comment"># This means you have to iterate over the rows of the 1000 × 3 array and</span></span><br><span class="line"><span class="comment"># compute the dot product between the vectors represented by the current array row.</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">r1 = np.zeros(<span class="number">1000</span>).reshape(<span class="number">1000</span>, <span class="number">1</span>)</span><br><span class="line">r2 = np.zeros(<span class="number">1000</span>).reshape(<span class="number">1000</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">start_time = time.time()</span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">999</span>:</span><br><span class="line">r1[i] = np.dot(q1[i], q2[i])</span><br><span class="line">i = i+<span class="number">1</span></span><br><span class="line"><span class="comment"># print(r1)</span></span><br><span class="line">end_time = time.time()</span><br><span class="line">print(end_time-start_time)</span><br><span class="line"></span><br><span class="line"><span class="comment"># s. Now, try to compute the dot product without using loops.</span></span><br><span class="line"><span class="comment"># Compare the run times of your implementation (Hint: To measure the runtime,</span></span><br><span class="line"><span class="comment"># you can use the code snipped below or in ipython %timeit. Did you recognize something,</span></span><br><span class="line"><span class="comment"># while comparing the times (loops vs. no loops)?</span></span><br><span class="line">start_time = time.time()</span><br><span class="line">r2 = np.sum(q1*q2, axis=<span class="number">1</span>).reshape(<span class="number">1000</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># print(r2)</span></span><br><span class="line">end_time = time.time()</span><br><span class="line">print(end_time-start_time)</span><br><span class="line"></span><br><span class="line"><span class="comment"># t. The following scenario is given. We want to invert 1000 2 × 2 matrices.</span></span><br><span class="line"><span class="comment"># The 2 × 2 matrices are represented by a row (see Figure 1).</span></span><br><span class="line"><span class="comment"># The numbers written as subscripts represent the position of the original matrix entry of the 2 × 2 matrices.</span></span><br><span class="line"><span class="comment"># The superscript denotes the current array n ∈ [1 . . . 1000].</span></span><br><span class="line"><span class="comment"># Now, create an array with a size of 1000×4 using the command rand.</span></span><br><span class="line"><span class="comment"># Every row in that matrix represents a 2 × 2 matrix (compare Figure 1).</span></span><br><span class="line"><span class="comment"># Note, that the memory layout of the 2 × 2 matrices must not be changed.</span></span><br><span class="line"><span class="comment"># That means we don’t want to change the current structure of the 2 × 2 matrices represented as a row.</span></span><br><span class="line"><span class="comment"># Don’t change the 1 × 4 matrices to 2×2 matrices and don’t change the inv command.</span></span><br><span class="line"><span class="comment"># We can now use Cramer’s Rule to compute the inverse of our 1000, as row represented, 2 × 2 matrices.</span></span><br><span class="line"><span class="comment"># Compute the inverses of the created 2 × 2 matrices without using any loops.</span></span><br><span class="line">T = np.matlib.rand(<span class="number">1000</span>, <span class="number">4</span>)</span><br><span class="line">T_inv = np.matlib.empty((<span class="number">1000</span>, <span class="number">4</span>))</span><br><span class="line">T_star = np.matlib.empty((<span class="number">1000</span>, <span class="number">4</span>))</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">999</span>:</span><br><span class="line">det = T[i, <span class="number">0</span>]*T[i, <span class="number">3</span>]-T[i, <span class="number">1</span>]*T[i, <span class="number">2</span>]</span><br><span class="line">T_star[i, :] = [T[i, <span class="number">3</span>], -T[i, <span class="number">1</span>], -T[i, <span class="number">2</span>], T[i, <span class="number">0</span>]]</span><br><span class="line">T_inv[i, :] = T_star[i, :] / det</span><br><span class="line">i = i+<span class="number">1</span></span><br><span class="line">print(<span class="string">'t. invert 1000 2*2 matrices :\n'</span>, T_inv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># u. Write a function, which accepts 2 m × m matrices.</span></span><br><span class="line"><span class="comment"># The function should be able to compute the sum as well as the product of both matrices.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mat_sum_and_product</span><span class="params">(a, b)</span>:</span></span><br><span class="line"><span class="keyword">if</span> (a.shape[<span class="number">0</span>] == a.shape[<span class="number">1</span>]) <span class="keyword">and</span> (a.shape == b.shape):</span><br><span class="line">mat_sum = a+b</span><br><span class="line">mat_product = np.dot(a, b.T)</span><br><span class="line">print(<span class="string">' the sum and product of mat a and b is \n &#123;0&#125; \n and \n &#123;1&#125;'</span>.format(mat_sum, mat_product))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'input error'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A = np.arange(<span class="number">4</span>).reshape(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">B = np.arange(<span class="number">4</span>, <span class="number">8</span>).reshape(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">mat_sum_and_product(A, B)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> Numpy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 入门 </tag>
            
            <tag> Python </tag>
            
            <tag> numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电影《降临》联想</title>
      <link href="/blog/2019/08/25/%E7%94%B5%E5%BD%B1%E3%80%8A%E9%99%8D%E4%B8%B4%E3%80%8B%E8%81%94%E6%83%B3/"/>
      <url>/blog/2019/08/25/%E7%94%B5%E5%BD%B1%E3%80%8A%E9%99%8D%E4%B8%B4%E3%80%8B%E8%81%94%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>不管怎样降临还是一部风格独特的硬科幻电影（我对硬科的理解是科学猜想）。首先剧情不拖沓，对外星飞船的研究加上主角脑海中闪现的画面完整的展现了故事的主体结构有理有据（除了和尚将军的通话内容完全是不了解中国）；镜头合理，画面充满模糊的美感，尤其喜欢这款外星智慧神秘的生存方式和奇特的语言；另外艾米亚当斯的表演也值得肯定（虽然从头到尾一脸惊讶）。</p><p>剧评就说那么多，其实这次我想讨论的是一个关于究竟什么样的外星智慧会降临地球的问题（建立在普通人类对宇宙简单的认知上）。</p><p>根据历史经验和猜想，可以先确定两条定论：1.对于受自然条件限制的群居生物，内部科技生产力的发展和对外部的扩张都是建立在内部群体之间相对和谐的条件下的，也就是说人与人和平相处是社会进步的条件。2.外星智慧体合理存在，而且可能会对其发现的外界生物做出威胁性判断（就威胁性判断来讲，我认为像三体中直接消灭太阳系的可能性比较小，因为智慧生的威胁性判断是需要经验积累的，除非有特殊能力仅凭直觉感知正确结果，否者根据简单信息作出的判断出错率太高，这样的智慧体不容易生存）。根据以上两条定论可以推测以下几种外星生物降临地球的情况：</p><p>一、外星生物生存不受自然环境限制或者说可以在宇宙中自由移动的通过偶然的机遇或者某种讯息（例如气味等等）的诱导降临地球（也可能检测到地球存在威胁就离开了），这种生物的到来可能什么也不会发生（宇宙生物也不一定是可视化的），也有可能根据能量守恒，在地球补充能量直接或间接的对人类造成威胁，或者形成互补的的关系，例如吞噬垃圾。</p><p>二、外星生物是群居智慧体（每个个体的智慧是独立的）且其生存环境受自然环境的影响。这种生物要想克服自然限制到达地球，就必须使其内部（无论是通过专制还是共和体制或者是其他方式）达到和谐，然后推动其社会内部科发展，通过工具或者改造自身降临地球。到达地球后又会出现两种情况，第一种是外星生物可以与地球生物产生互动，如果他们同样将人类或其他生物看做智慧体，就会对地球生物做出威胁性判断，如果在与地球生物互动中检测到威胁（或者产生误会），他们可能会自动离开，也可能会对地球生物或人类发动战争，最终消灭或者奴役目标生物；而如果和地球生物产生良性互动，由于其发展过程中存在和平共处的概念，因此会和地球沟通已达到其寻找生存空间、能量补给或者探索宇宙的目的。第二种情况，如果外星生物不能与地球生物产生互动或者将地球生物视为低能生物（比如人和蚂蚁的关系），就有可能在无视人类对地球进行开发，例如抽取地球水资源，而人类如果无力反抗或者反抗失败，会对人类的生存产生毁灭性的影响，当然也可能对人类毫无影响，或者产生互补（这种概率比较低）。</p><p>三、外星生物是地球的设计者，他们以某种目的将地球及其生物设计出来，有意或者无意产生了人类这个物种，然后在某一时间降临地球，“收割”其所需资源。（这个概念太大不予讨论了）</p><p>最后得出结论是上述三种外来生物有条件到达地球。至于受自然环境限制的非智慧型群居生物，由于不存在智慧就没有克服自然限制的条件，无法到达地球，而受自然限制的个体生物，我认为因为对外界没有互动和自身生存状态单一很难进化也没有探索意识，所以也无法克服自然限制。</p><p>再说一个对于电影问题，降临中女主角产生预知未来的能力，是不是从学习外星语言开始的，因为根据“萨皮尔沃夫假说”所有高层次的思维都依赖于语言，”if you immerse into a foreign language that you can actually rewire your brain”。如果是的话，为什么电影开头会出现未来的画面，难道不是女主学习外星语言之前脑海中就有的吗？</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 测评 </category>
          
          <category> 影评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 电影 </tag>
            
            <tag> 科幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>意大利漫游（一）：小小国梵蒂冈</title>
      <link href="/blog/2019/08/25/%22%E6%84%8F%E5%A4%A7%E5%88%A9%E6%BC%AB%E6%B8%B8%EF%BC%9A%E5%B0%8F%E5%B0%8F%E5%9B%BD%E6%A2%B5%E8%92%82%E5%86%88%22/"/>
      <url>/blog/2019/08/25/%22%E6%84%8F%E5%A4%A7%E5%88%A9%E6%BC%AB%E6%B8%B8%EF%BC%9A%E5%B0%8F%E5%B0%8F%E5%9B%BD%E6%A2%B5%E8%92%82%E5%86%88%22/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><blockquote><p>七天的假期足够当作远行的借口，思前虑后，决定去罗马，去庞贝，去西西里岛，抖一抖身心的疲倦。</p></blockquote><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/5RHAQZyY2LDl7Wv.png"  alt="行程"></p><hr><h2 id="降落在罗马"><a href="#降落在罗马" class="headerlink" title="降落在罗马"></a>降落在罗马</h2><p>在欧罗巴大陆已经呆了超过一年，各种华丽的教堂，夸张的王宫府邸瞧了不少，早就开始审美疲劳，提不起兴致，即便有些有趣的历史轶事或者伟大人物加持，也没了特意去缅怀的热情。但是 罗马太过有名,怀里还抱着世界上最小的国家,实在忍不住想去打一下卡。</p><p>从波恩科隆机场到Ciampino机场要两个小时，机场有售Rome Pass票，包含48或者72小时交通票和一些景点门票，现在想想确实方便，值得提前了解一下, 不过我们当时没打算去多少景点，只买了交通票,也是分成48小时(12.5€)和72小时(18€),包含shuttle bus,地铁,公交。 罗马其实有两个机场一个是靠海的Leonardo da Vinci International Airport,国际航班比较多,另一个是我们去的位于郊区的Ciampino Airport,需要搭大巴FM4去市区,包含在交通票里。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/5RUJbLKzjrSy8ms.jpg"  alt="地铁图"><br>罗马郊区不算干净，却也不失气派，去市区的路上，褐色建筑搭上了随处可见的椰子树，有点意大利电影的意思。</p><h2 id="直奔梵蒂冈"><a href="#直奔梵蒂冈" class="headerlink" title="直奔梵蒂冈"></a>直奔梵蒂冈</h2><p>到了市区，坐上🚇地铁A号线，趁着旅途刚开始的兴奋劲，朝着天主教的中心,国中之国🇻🇦行进。</p><p>下了火车沿着大路向前走,两边全是餐馆和纪念品商店,走到圣彼得广场正面(入口在侧面,限流,需要排队)，两侧弧形走廊相互对称，把这座比故宫还小的小城隔离出来，深入其中并不闭塞。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/4M3xXcnigYEuNKW.jpg"  alt="圣彼得广场正面"><br>让我印象最深刻的就是两侧的多利安式石柱走廊， 石柱造型粗壮有力灵感来只于男性人体美，据说要三四个人才能抱住，柱子本身没有过多的装饰，我来回走了一圈，忽略掉下面的游客看起还有几分优雅。走廊内有流水，供行人饮用，天气炙热，冲一把脸，十分快活。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/274qouHc3TDKCdv.jpg"  alt=""><br>对于包含了各种符号语言和宗教典故各种雕塑装饰，不知其中一二，确实食之无味，像我这种懒人也就不强求能理解多少，若是碰巧知道一些，听过一些，也就是多看一眼罢了，即使是有如米开朗基罗，达芬奇 ，拉斐尔这样的大师的名作在此，心里也漾不起多大的涟漪。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/KwI9tkyB1LoacUV.jpg"  alt=""><br>譬如广场内的许多石像喷泉，大约也有讲不完的故事，就不多做介绍了。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/RjQskGXEyV4Nvu9.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/zqjXRWFrHnOthBU.jpg"  alt="电影《天使与魔鬼》中，科学祭坛就在广场中心埃及方尖碑下"><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/naDgPBCidIyjNxH.jpg"  alt=""><br>然后我们冒着大太阳在广场的右侧排了一会隊，进入了圣彼得大教堂，到处都是精雕细刻，米开朗基罗在设计的时候真是处处都下了大工夫。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/xrG47fkQUTJVH8O.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/HxK2VsW61Fj7C98.jpg"  alt=""><br>走到教堂的内部更是华丽至极，宽敞且金碧辉煌，可能需要花大把的时间慢慢欣赏，但是对于我这样走马观花的游客，一眼看过去纷繁复杂失了焦点，眼睛容易疲惫。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/XPLZ7tVeUF4jdT6.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/5gcq2bthOLDrnvW.jpg"  alt=""><br>在许多教堂总是可以看到这样的景象：一束光从天窗里射到圣父圣母或者天使的雕像上，画面神圣庄严，但是有了光的直接参与，手机相机显得力不从心，无法记录当时的光晕。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/eocStTmDVjsgBAi.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/F4aAkpfQ6vhjwUK.jpg"  alt="租用的瑞士卫兵💂，穿了十分有趣的衣服，咱也不知道原因，咱也不敢问。"><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/e8vxilfOdkUaEtC.png"  alt="⛪️ 圣彼得 大教堂和 圣彼得 广场：周一到周日每天早上七点到下午九点开放。⛪️西斯廷礼拜堂： 周一到周六每天早上九点到下午四点开放。"><br>从出来，步行八分钟就能到圣天使堡，门票十几欧，前面是圣天使桥，后面有个阴凉的公园，楼顶有不错的风景。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/faDnTvVpNrC57Ri.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/kDrCZy4gbRicSf2.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/nbKD7EmtGyTSBzF.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/vtWL3HnGbXBpcj2.jpg"  alt=""></p><h2 id="宽窄巷子"><a href="#宽窄巷子" class="headerlink" title="宽窄巷子"></a>宽窄巷子</h2><p>着重推荐一家中餐馆叫宽窄巷子，是目前为止我在 欧洲 吃过最好吃中餐馆，他家在罗马有两家店，其中一家在附近，不是很好找，我们中午和晚上都是在那吃的，价格适中，羡慕在罗马的同学，其他信息自行查看大众点评，写这段的时候好饿，不说了，中华料理天下第一。<br><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/T2fsYAF6WXCcwIn.jpg"  alt=""></p><h2 id="下集预告"><a href="#下集预告" class="headerlink" title="下集预告"></a>下集预告</h2><p><img src="/blog/" class="lazyload" data-src="https://i.loli.net/2019/08/25/XsRQ5Ac23feTFVo.jpg"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅行 </tag>
            
            <tag> 意大利 </tag>
            
            <tag> 梵蒂冈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建站相关文章收藏汇总</title>
      <link href="/blog/2019/08/24/Hexo%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0%E6%94%B6%E8%97%8F%E6%B1%87%E6%80%BB/"/>
      <url>/blog/2019/08/24/Hexo%E5%BB%BA%E7%AB%99%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0%E6%94%B6%E8%97%8F%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="pjax实现音乐不间断播放-Shawn’s-Blog"><a href="#pjax实现音乐不间断播放-Shawn’s-Blog" class="headerlink" title="pjax实现音乐不间断播放-Shawn’s Blog"></a><a href="https://www.shawnlin.cn/a54bd4f/#jquery-pjax" target="_blank" rel="noopener">pjax实现音乐不间断播放-Shawn’s Blog</a></h2><h2 id="hexo-theme-butterfly安装文档-JerryC"><a href="#hexo-theme-butterfly安装文档-JerryC" class="headerlink" title="hexo-theme-butterfly安装文档-JerryC"></a><a href="https://jerryc.me/posts/21cfbf15/" target="_blank" rel="noopener">hexo-theme-butterfly安装文档-JerryC</a></h2><h2 id="pjax使用小结-anyesu-简书"><a href="#pjax使用小结-anyesu-简书" class="headerlink" title="pjax使用小结-anyesu-简书"></a><a href="https://www.jianshu.com/p/557cad38e7dd" target="_blank" rel="noopener">pjax使用小结-anyesu-简书</a></h2><h2 id="hexo添加Aplayer音乐播放插件"><a href="#hexo添加Aplayer音乐播放插件" class="headerlink" title="hexo添加Aplayer音乐播放插件"></a><a href="https://bzqll.com/2017/12/84.html" target="_blank" rel="noopener">hexo添加Aplayer音乐播放插件</a></h2>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Mac上使用Hexo创建站点经验</title>
      <link href="/blog/2019/08/24/%E5%9C%A8Mac%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E7%AB%99%E7%82%B9%E7%BB%8F%E9%AA%8C/"/>
      <url>/blog/2019/08/24/%E5%9C%A8Mac%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E5%88%9B%E5%BB%BA%E7%AB%99%E7%82%B9%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>使用<a href="https://hexo.io/" title="" target="">Hexo</a>+<a href="https://github.com/" title="" target="">Github</a>创建个人博客相当方便，本文简单介绍下我在创建此站点时的一些经验和遇到的问题。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>现在市面上可选的建站程序相当多，除了老牌博客程序WordPress，还有FarBox，Octopress，Ghost，Jekyll，Hexo等等，其中一些例如Jekyll和Hexo可以托管到Github上，利用GitHub Pages建站。Jekyll是GitHub官方推荐建站工具，完全免费插件多，教程多，自定义程度高，但是步骤繁琐需要一定的技术基础，而Hexo也是免费，使用<a href="https://nodejs.org/zh-cn/" title="" target="">Node.js</a>搭建，速度快，操作安装都很简单，命令也少，可选主题也很丰富，好像是产于台湾，在华人世界十分流行。作为小白选手，第一次建站果断选择了Hexo。</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>平台：Mac<br>参考：<br>    <a href="https://hexo.io/zh-cn/docs/" title="" target="">hexo官方文档</a><br>    <a href="https://zhuanlan.zhihu.com/p/34654952" title="" target="">Mac+Hexo+GitHub搭建博客教程-谓之小一的文章-知乎</a></p><h3 id="1-安装Hexo"><a href="#1-安装Hexo" class="headerlink" title="1.安装Hexo"></a>1.安装Hexo</h3><p>首先要确保安装Xcode，Node.js和Git。Xcode在APP store下载，Node.js建议官网下载直接安装，也可以nvm安装，Git使用终端和Homebrew安装 <code>brew install git</code> 或者直接下载安装。</p><p>然后就可以打开终端使用<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>安装Hexo了，（sudo：权限，-g：全局安装）<br><code>sudo npm install -g hexo</code></p><h3 id="2-初始化"><a href="#2-初始化" class="headerlink" title="2.初始化"></a>2.初始化</h3><p>在你喜欢的位置创建一个文件夹，取一个好听的英文名字，比如myweb🙂，然后进入文件夹<code>cd myweb</code><br>初始化本地博客<code>hexo init</code><br>在本地博客安装npm<code>sudo npm install</code><br>建站完成后文件夹内出现的内容可以去<a href="https://hexo.io/zh-cn/docs/setup/" target="_blank" rel="noopener">官方文档-建站</a>了解一下。<br>执行generate命令<code>hexo g</code>生成静态文件，然后执行<code>hexo s</code>命令启动本地服务器，地址是<code>http://localhost:4000/</code>,此时可以看到博客相当土气的初始页面。<br><img src="/blog/" class="lazyload" data-src="https://pic3.zhimg.com/v2-dcb8d3dcc5d2b9b39c1b8d1149ccfd6e_b.jpg"  alt=" "></p><h3 id="3-更换主题"><a href="#3-更换主题" class="headerlink" title="3.更换主题"></a>3.更换主题</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo-主题</a>提供了大量可选主题，可根据个人口味选择，另外也可以去知乎豆瓣Github上寻找大神们分享的主题。<br>一般主题的Github仓库里都有安装和设置文档，建议仔细查看，以便日后自定义修改主题，这里以本博主题<a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">Butterfly</a>为例简单介绍一下如何安装。</p><p>首先在博客根目录里使用下载主题<br><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</code><br>然后在hexo配置文件_config.yml中将主题改为Butterfly<br><code>theme: Butterfly</code><br>使用<code>hexo g</code>和<code>hexo s</code>测试一下吧。<br>如此你的博客就换上新衣服，进入时尚圈了。然后根据主题的安装文档进行自定义设置就可以了，相当简单。</p><h3 id="4-链接到GitHub"><a href="#4-链接到GitHub" class="headerlink" title="4.链接到GitHub"></a>4.链接到GitHub</h3><p>现在就可以把你的小站放到GitHub上托管了，当然首先你要先拥有一个GitHub账户并且掌握如何创建和管理仓库，如果不会Google或者知乎一下。<br>然后新建一个仓库命名为<code>user.github.io</code>,这里的user建议使用你的GitHub用户名，然后在<code>Setting-&gt;Github Pages</code>里打开Pages，这样可以使用user.github.io直接访问，如：<code>zkp.github.io</code>，然后用编辑器打开myweb中的配置文件_config.yml，在文档的最后配置deploy：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git #使用git进行配置</span><br><span class="line">    repository: https:&#x2F;&#x2F;github.com&#x2F;zkp&#x2F;zkp.github.io.git #可以在GitHub仓库代码页绿色按钮找到这个链接</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>这里要注意一下，写yml格式代码冒号后面必加空格。</p><p>再安装一下hexo-deployer-git <code>npm install hexo-deployer-git</code>。现在就可以执行<code>hexo g -d</code>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>生成静态文件（g）然后在上传到服务器上了（d），如果以前为配置过git可能需要输入GitHub账户和密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username for &#39;https:&#x2F;&#x2F;github.com&#39;:</span><br><span class="line">password for &#39;https:&#x2F;&#x2F;github.com&#39;:</span><br></pre></td></tr></table></figure><p>执行成功后就可以用zkp.github.io在任何设备上访问网站了，简直太方便了。</p><p>而且还可以去阿里云或者腾讯云花几十块钱买个一年的域名，通过GitHub链接到域名上就可以使用自己的域名登陆了。具体如何配置可以看<a href="https://juejin.im/post/5a71a4f9518825733a3105ac" target="_blank" rel="noopener">这里</a>。</p><p>另外以后每次修改主题或者发布文章都要执行<code>hexo g -d</code>更新服务器，如果出现错误，可以先运行<code>hexo clean</code>在运行前面的命令。</p><h3 id="5-发布新的文章"><a href="#5-发布新的文章" class="headerlink" title="5.发布新的文章"></a>5.发布新的文章</h3><p>在本地<code>hexo new post &quot;站点名称&quot;</code>可以新建文章，例如这里新建一个Hellow world文章：<br>首先<br><code>$ hexo new post &quot;Hellow world&quot;</code><br>然后会提示<br><code>INFO  Created: ~/myweb/source/_posts/Hellow word.md</code><br>然后可以去这个位置打开markdown文件，文件由上面的<a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">Front-matter</a>和编辑区组成，可以根据官方文档或者主题的配置文档对文章Front-matter进行设置，例如添加tags和categories等，然后就可以在下面使用markdown语法愉快的写作了。<br>写完保存别忘了生成静态文件，上传到github。</p><p>另外还可以使用Hexo配置第三方的插件，例如添加评论，转发，动效等等功能，有兴趣就去探索一下吧。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我在建站的时候遇到一些小问题。</p><h3 id="每次上传之后之前绑定的域名就失效了"><a href="#每次上传之后之前绑定的域名就失效了" class="headerlink" title="每次上传之后之前绑定的域名就失效了"></a>每次上传之后之前绑定的域名就失效了</h3><p>这是因为每次上传都会覆盖服务器上绑定域名的文件CNAME，解决方法是在myweb的source文件夹里创建一个CNAME文件，在里面写上域名就可以了。</p><h3 id="执行-hexo-d-后卡住"><a href="#执行-hexo-d-后卡住" class="headerlink" title="执行 hexo d 后卡住"></a>执行 hexo d 后卡住</h3><p>这个问题困扰了一下午，在求救的过程中发现很多人都遇到过，很多人选择死等，但是我死等后居然报错，心灰意冷，最后终于找到了问题的关键，我在多次上传后准备提交的时候有一次因为一个文件超过Github最大上传限制被卡住，删除那个文件还是不行，因为在目录里有一个隐藏的提交历史文件.deploy_git一直被卡住，所以要打开隐藏文件找到并删除它，然后<code>hexo clean</code>再<code>hexo g -d</code>,问题解决！</p><p>Mac打开隐藏文件的方法是<code>Command+Shift+.</code></p><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p>做这个博客的想法已经在脑中里存放了好久了，但是一直没去动手实现，今次终于做出来了，不用再纠结自己想分享的内容放哪了。利用Hexo和Github真的超级方便，虽然现在还是很简单的页面和功能但是基本满足我的需要了，而且以后还可以慢慢搞一些插件和新的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 笔记 </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World !</title>
      <link href="/blog/2019/08/22/Hello_World/"/>
      <url>/blog/2019/08/22/Hello_World/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><p>这是我的第一篇博客。<br>Welcome ！This is my first post.</p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p>我会在这里分享一些平时写的文章，大多数应该是技术性的文章，偶尔可能会分享一些旅记，影评，生活之类的文章。<br>另外在Gallery里可以看到平时的照片和作品展示。<br>还可以在这里找到我在各大网站的账号，包括Github，YouTube，Instagram，知乎，豆瓣，B站等。<br>如果喜欢我的文章可以分享或者Donate。<br>有任何问题欢迎给我留言。<br>本网站使用中国大陆Cos,并托管在Github上（正在考虑转到Gitee上），海外浏览图片可能加载缓慢。</p><p>祝好。<br>Love and Peace</p><p>本站使用Hexo，另感谢JerryCC的主题Butterfly，另外许多封面图来自摄影师Curioso。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 记事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认知机器人：感知物体位置和形态</title>
      <link href="/blog/2018/09/16/%E8%AE%A4%E7%9F%A5%E6%9C%BA%E5%99%A8%E4%BA%BA%EF%BC%9A%E6%84%9F%E7%9F%A5%E7%89%A9%E4%BD%93%E4%BD%8D%E7%BD%AE%E5%92%8C%E7%8A%B6%E6%80%81/"/>
      <url>/blog/2018/09/16/%E8%AE%A4%E7%9F%A5%E6%9C%BA%E5%99%A8%E4%BA%BA%EF%BC%9A%E6%84%9F%E7%9F%A5%E7%89%A9%E4%BD%93%E4%BD%8D%E7%BD%AE%E5%92%8C%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><blockquote><p>参加学校实验课程做的机器人项目(小组项目)，在Ros系统上使用RealSense的RGB-D摄像头实时识别物体的位置和形态，提供pointcloud数据给系统，以便机器人后续操作。</p></blockquote><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-3.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-4.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-5.jpg"  alt="cg"></p><p>使用RealSense RGB-D相机获取颜色和深度信息</p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-7.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-8.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-9.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-10.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-11.jpg"  alt="cg"></p><h1 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h1><p><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-19.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-20.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-21.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-22.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-23.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-24.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-25.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-26.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-27.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-28.jpg"  alt="cg"><br><img src="/blog/" class="lazyload" data-src="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/articles/cg_lab/cg_presentation_slides-29.jpg"  alt="cg"></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> 机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 机器人 </tag>
            
            <tag> Ros </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/blog/categories/index.html"/>
      <url>/blog/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>About</title>
      <link href="/blog/about/index.html"/>
      <url>/blog/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h1 id="你好，我是kp"><a href="#你好，我是kp" class="headerlink" title="你好，我是kp"></a>你好，我是kp</h1><p><strong>🇨🇳 来自济宁，在青岛读过大学</strong><br><strong>🇩🇪 现在在德国Uni Bonn读书</strong><br><strong>🧑🏻‍💻 一个暂时没什么本事的学生</strong><br><strong>🌈 希望以后能成为一个一流的工程师，最好还能懂点设计</strong><br>📷 🐱 🎮 🎧 🎬 🏀 🔭 🎸🎒</p><h3 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h3><p>马上要毕业了,准备开始找工作…</p><h3 id="为什么写博客"><a href="#为什么写博客" class="headerlink" title="为什么写博客"></a>为什么写博客</h3><blockquote><p>归根结底，没什么是不朽的，我们终将化为粉尘，归彼大荒，但还是要写，写是一件没办法的事，什么也不图，却非这么不可。——柴静</p></blockquote><blockquote><p>双目失明的汉弥尔顿为什么还坐在黑灯瞎火里头写十四行诗那就叫“自我”——王小波</p></blockquote><blockquote><p>走出自己的傲慢，承认自己的局限。——罗翔</p></blockquote><h3 id="其实还想交些聊得来的朋友…"><a href="#其实还想交些聊得来的朋友…" class="headerlink" title="其实还想交些聊得来的朋友…"></a>其实还想交些聊得来的朋友…</h3><p>虽然不是什么厉害的人，但其实我会一些 #Python #DL #ML #Web #ROS #VHDL … ….</p><p>所以如果你想找我交流一下，合作一下,一定要给我发<a href="mailto:z.kp@outlook.com">邮件</a>哈..</p><p><video src='https://img-1253324855.cos.ap-chengdu.myqcloud.com/video.mp4' type='video/mov' width='100%' controls="controls" preload="auto" height='100%' poster='https://img-1253324855.cos.ap-chengdu.myqcloud.com/videoposter.jpg'></video></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>archives</title>
      <link href="/blog/archives/index.html"/>
      <url>/blog/archives/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>版权说明</title>
      <link href="/blog/copyright/index.html"/>
      <url>/blog/copyright/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><p><strong>本博客的所有博文除特别声明外均由<a href="zkpeace.com">@Kp</a>原创,均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener">CC BY-NC-SA 4.0 许可协议</a>。转载请注明.</strong></p><p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p><strong>本站使用快速,简洁且高效的<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>博客框架搭建</strong></p><p><strong>使用主题<a href="https://github.com/jerryc127/hexo-theme-butterfly," target="_blank" rel="noopener">Butterfly</a>(作者:<a href="https://jerryc.me/" target="_blank" rel="noopener">@JerryC</a>),部分页面由本人改建而成,例如‘我的’,‘FM’,‘相册’页面</strong></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><strong>本站图片部分图片,视频素材来自免费素材网站<a href="https://www.pexels.com/zh-cn/" target="_blank" rel="noopener">Pexels</a></strong></p><p><strong>博主头像来源于网络.侵删</strong></p><p><strong>其余图片均由博主<a href="zkpeace.com">@Kp</a>拍摄</strong></p><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>除主题自带插件外,还使用了:</p><p>动态: 微博</p><p>访客地图: <a href="https://clustrmaps.com/" target="_blank" rel="noopener">clustrmaps</a></p><p><a href="https://www.webpushr.com/" target="_blank" rel="noopener">Web Notification Push</a> | <a href="https://github.com/glazec/hexo-web-push-notification" target="_blank" rel="noopener">hexo-web-push-notification</a></p><p>hexo-excerpt</p><h2 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h2><p>本站使用许多开源代码</p><ul><li>链接页面: design by <a href="http://viggoz.com/" target="_blank" rel="noopener">@Viggo</a> modified by <a href="zkpeace.com">@Kp</a></li><li>维基页面: forked from <a href="https://ricostacruz.com/" target="_blank" rel="noopener">@rstacruz</a></li><li>‘我的页面’图表内容修改自网络共享代码,侵删</li></ul><h1 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h1><ul><li><a href="https://fontawesome.com/" target="_blank" rel="noopener">Fontawesome</a>免费图标</li><li><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">Iconfont</a><ul><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=575378" target="_blank" rel="noopener">-晓-LF</a> </li><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=82627" target="_blank" rel="noopener">KERRY_ZJX</a></li><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=187147" target="_blank" rel="noopener">Howieart</a></li><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=674618" target="_blank" rel="noopener">BD-dogCMYK</a></li><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=4537788" target="_blank" rel="noopener">longalong</a></li><li><a href="https://www.iconfont.cn/user/detail?spm=a313x.7781069.0.d214f71f6&uid=4736470" target="_blank" rel="noopener">张山晚</a></li></ul></li></ul><div class="note warning">            <p>我个人对任何内容的原创作者充满敬意,尽力保护版权,如果您发现本站出现由于本人疏忽大意使用了未声明或未授权内容,请及时联系我!</p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>FM</title>
      <link href="/blog/fm/index.html"/>
      <url>/blog/fm/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>    <div id="aplayer-bqQKtsOO" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="2962395686" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="1500px" data-preload="auto" data-theme="#2E86C1"    ></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>life</title>
      <link href="/blog/life/index.html"/>
      <url>/blog/life/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/blog/tags/index.html"/>
      <url>/blog/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Things</title>
      <link href="/blog/things/index.html"/>
      <url>/blog/things/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/blog/about/link/index.html"/>
      <url>/blog/about/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><h2 id="我的友链信息"><a href="#我的友链信息" class="headerlink" title="我的友链信息"></a>我的友链信息</h2><ul><li>名字：zkpeace</li><li>地址：<a href="https://zkpeace.com">https://zkpeace.com</a></li><li>头像：<a href="https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/public/avatar.jpg" target="_blank" rel="noopener">https://img-1253324855.cos.ap-chengdu.myqcloud.com/myweb/public/avatar.jpg</a></li><li>介绍：欢迎光临😊</li></ul><div class="note warning">            <p>出于安全考虑,不接受内含黄赌毒,破解软件下载链接,非原创未署名文章,完全商业推广等内容的链接.</p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Douban</title>
      <link href="/blog/life/douban/index.html"/>
      <url>/blog/life/douban/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><style>    .douban{        overflow:hidden;        style="background:transparent"    }    .douban iframe{        width:105%;         height:1500px;         border: none;        border-radius: 10px;    }</style><div class="douban" >    <iframe        src="https://m.douban.com/people/43103367/subject_profile"         sandbox = "allow-scripts allow-same-origin">    </iframe></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Gallery</title>
      <link href="/blog/life/gallery/index.html"/>
      <url>/blog/life/gallery/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="gallery-group-main">      <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/1.jpg'>  <figcaption>  <div class="gallery-group-name">摄影</div>  <p>分享一下我拍的，自己觉得好看的照片</p>  <a href='/blog/life/gallery/photos/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/2.jpg'>  <figcaption>  <div class="gallery-group-name">生活</div>  <p>生活记录</p>  <a href='/blog/life/gallery/life/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/3.jpg'>  <figcaption>  <div class="gallery-group-name">画云</div>  <p>就是为了凑够九个相册... 内容以后再说</p>  <a href='/blog/life/gallery/cloud/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/5.JPG'>  <figcaption>  <div class="gallery-group-name">设计</div>  <p>就是为了凑够九个相册... 内容以后再说</p>  <a href='/blog/life/gallery/cover/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/6.JPG'>  <figcaption>  <div class="gallery-group-name">誊抄</div>  <p>就是为了凑够九个相册... 内容以后再说</p>  <a href='/blog/life/gallery/transcribe/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/7.JPG'>  <figcaption>  <div class="gallery-group-name">手绘</div>  <p>就是为了凑够九个相册... 内容以后再说</p>  <a href='/blog/life/gallery/sketching/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/8.JPG'>  <figcaption>  <div class="gallery-group-name">食物</div>  <p>其实我还是一个一定要买洗碗机的居家厨子</p>  <a href='/blog/life/gallery/food/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/4.JPG'>  <figcaption>  <div class="gallery-group-name">青大</div>  <p>在青大读书的时候</p>  <a href='/blog/life/gallery/qingdao/'></a>  </figcaption>  </figure>        <figure class="gallery-group">  <img class="gallery-group-img" src='/blog/img/curioso/9.JPG'>  <figcaption>  <div class="gallery-group-name">其他</div>  <p>就是为了凑够九个相册... 内容以后再说</p>  <a href='/blog/life/gallery/qingdao/'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Footprint (Google Map)</title>
      <link href="/blog/life/footprint/index.html"/>
      <url>/blog/life/footprint/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="fullwidth-layout-page" style="overflow:hidden;border-radius: 8px; box-shadow: 0 4px 8px 6px rgba(7, 17, 27, .06);margin-top: 1rem;margin-bottom: 1rem;max-width: 1300px">        <iframe         width="500"         height="1000"          frameborder="0"         scrolling="no"         style="width:120%;border: none;overflow: hidden; margin: -5rem -1rem"        src="https://www.google.com/maps/d/embed?mid=18CczdO6ozYstmG2AxkWOl-RGLVXWOy9Q"></iframe></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>上头有人</title>
      <link href="/blog/life/gallery/cloud/index.html"/>
      <url>/blog/life/gallery/cloud/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery">          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/blog/life/gallery/cover/index.html"/>
      <url>/blog/life/gallery/cover/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery"><p><img src="/blog/" class="lazyload" data-src="https://bonn-dorm-1253324855.cos.eu-frankfurt.myqcloud.com/articles/userguide.png"  alt="cover"><br><img src="/blog/" class="lazyload" data-src="https://bonn-dorm-1253324855.cos.eu-frankfurt.myqcloud.com/articles/3.png"  alt="cover"><br><img src="/blog/" class="lazyload" data-src="https://bonn-dorm-1253324855.cos.eu-frankfurt.myqcloud.com/articles/2.png"  alt="cover"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/blog/life/gallery/life/index.html"/>
      <url>/blog/life/gallery/life/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery"><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_30.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_0.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_29.jpg"  alt="life"></p><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_1.jpg) --><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_2.jpg) --><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/onmyway.jpg) --><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_3.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_4.jpg"  alt="life"></p><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_5.jpg) --><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_6.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_7.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_8.jpg"  alt="life"></p><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_9.jpg) --><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_10.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_11.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_12.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_13.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_14.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_15.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_16.jpg"  alt="life"></p><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_17.jpg) --><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_18.jpg) --><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_19.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_20.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_21.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_22.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_23.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_24.jpg"  alt="life"></p><!-- ![life](https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_25.jpg)   --><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_26.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_27.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/life_28.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/applepencil.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/macbook.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/thailand.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/thailand1.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/zyz.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/zyz1.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/cat.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/dinner.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/earphone.jpg"  alt="life"><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/life/handinhand.jpg"  alt="life"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/blog/life/gallery/food/index.html"/>
      <url>/blog/life/gallery/food/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery">          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>摄影</title>
      <link href="/blog/life/gallery/photos/index.html"/>
      <url>/blog/life/gallery/photos/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery"><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo0.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo1.jpg"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo2.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo3.JPG"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo4.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo5.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo6.JPG"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo9.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo10.JPG"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo11.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo12.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo13.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo14.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo15.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo16.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo17.jpg"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo18.JPG"  alt=""></p><p><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo20.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo21.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo22.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo23.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo24.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo25.JPG"  alt=""><br><img src="/blog/" class="lazyload" data-src="https://hk-1253324855.cos.ap-hongkong.myqcloud.com/photos/photo26.JPG"  alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>青大</title>
      <link href="/blog/life/gallery/qingdao/index.html"/>
      <url>/blog/life/gallery/qingdao/index.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请在下面输入我大学C++老师的名字拼音全拼...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5710a3095f3b3177e94bd054953f48215a220287ba5842b2521f07ac087ef180"></script></div><script src="/blog/lib/blog-encrypt.js"></script><link href="/blog/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/blog/life/gallery/sketching/index.html"/>
      <url>/blog/life/gallery/sketching/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery">          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/blog/life/gallery/transcribe/index.html"/>
      <url>/blog/life/gallery/transcribe/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/blog/assets/css/APlayer.min.css"><script src="/blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/blog/assets/js/Meting.min.js"></script><div class="justified-gallery">          </div>]]></content>
      
    </entry>
    
    
  
</search>
